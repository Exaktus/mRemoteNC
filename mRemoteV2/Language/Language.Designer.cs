//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18052
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Language {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Language() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("mRemoteNC.Language.Language", typeof(Language).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Autoupdate.
        /// </summary>
        internal static string ConnectionStatusForm_ApplyLanguage_Autoupdate {
            get {
                return ResourceManager.GetString("ConnectionStatusForm_ApplyLanguage_Autoupdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection.
        /// </summary>
        internal static string ConnectionStatusForm_ApplyLanguage_Connection {
            get {
                return ResourceManager.GetString("ConnectionStatusForm_ApplyLanguage_Connection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connections status.
        /// </summary>
        internal static string ConnectionStatusForm_ApplyLanguage_Connections_status {
            get {
                return ResourceManager.GetString("ConnectionStatusForm_ApplyLanguage_Connections_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Host.
        /// </summary>
        internal static string ConnectionStatusForm_ApplyLanguage_Host {
            get {
                return ResourceManager.GetString("ConnectionStatusForm_ApplyLanguage_Host", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh.
        /// </summary>
        internal static string ConnectionStatusForm_ApplyLanguage_Refresh {
            get {
                return ResourceManager.GetString("ConnectionStatusForm_ApplyLanguage_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status.
        /// </summary>
        internal static string ConnectionStatusForm_ApplyLanguage_Status {
            get {
                return ResourceManager.GetString("ConnectionStatusForm_ApplyLanguage_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Test type.
        /// </summary>
        internal static string ConnectionStatusForm_ApplyLanguage_Test_type {
            get {
                return ResourceManager.GetString("ConnectionStatusForm_ApplyLanguage_Test_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking....
        /// </summary>
        internal static string ConnectionStatusForm_lstStatus_MouseDoubleClick_Checking___ {
            get {
                return ResourceManager.GetString("ConnectionStatusForm_lstStatus_MouseDoubleClick_Checking___", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lock toolbar.
        /// </summary>
        internal static string frmMain_ApplyLanguage_Lock_toolbar {
            get {
                return ResourceManager.GetString("frmMain_ApplyLanguage_Lock_toolbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick Text.
        /// </summary>
        internal static string frmMain_ApplyLanguage_Quick_Text {
            get {
                return ResourceManager.GetString("frmMain_ApplyLanguage_Quick_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick Text Toolbar.
        /// </summary>
        internal static string frmMain_ApplyLanguage_Quick_Text_Toolbar {
            get {
                return ResourceManager.GetString("frmMain_ApplyLanguage_Quick_Text_Toolbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connections status.
        /// </summary>
        internal static string frmMain_Connections_status {
            get {
                return ResourceManager.GetString("frmMain_Connections_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Downloading....
        /// </summary>
        internal static string Misc_DownloadFileVisual_Downloading {
            get {
                return ResourceManager.GetString("Misc_DownloadFileVisual_Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unpacking....
        /// </summary>
        internal static string Misc_UnZipFile_Unpacking___ {
            get {
                return ResourceManager.GetString("Misc_UnZipFile_Unpacking___", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EOLWTSCOM  found, but not registered.
        /// </summary>
        internal static string ProblemFixer_FixEolProblem_EOLWTSCOM__found__but_not_registered {
            get {
                return ResourceManager.GetString("ProblemFixer_FixEolProblem_EOLWTSCOM__found__but_not_registered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EOLWTSCOM  not found.
        /// </summary>
        internal static string ProblemFixer_FixEolProblem_EOLWTSCOM__not_found {
            get {
                return ResourceManager.GetString("ProblemFixer_FixEolProblem_EOLWTSCOM__not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EOLWTSCOM: problem found.
        /// </summary>
        internal static string ProblemFixer_FixEolProblem_EOLWTSCOM__problem_found {
            get {
                return ResourceManager.GetString("ProblemFixer_FixEolProblem_EOLWTSCOM__problem_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open mRemoteNC website.
        /// </summary>
        internal static string ProblemFixer_FixEolProblem_Open_mRemoteNC_website {
            get {
                return ResourceManager.GetString("ProblemFixer_FixEolProblem_Open_mRemoteNC_website", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Register EOLWTSCOM.
        /// </summary>
        internal static string ProblemFixer_FixEolProblem_Register_EOLWTSCOM {
            get {
                return ResourceManager.GetString("ProblemFixer_FixEolProblem_Register_EOLWTSCOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reinstall application..
        /// </summary>
        internal static string ProblemFixer_FixEolProblem_Reinstall_application_ {
            get {
                return ResourceManager.GetString("ProblemFixer_FixEolProblem_Reinstall_application_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To use the Gecko Rendering Engine you need to have XULrunner 1.8.1 or {0} and the path to the installation set in your Options.
        ///You can download XULrunner 1.8.1.3 here: ftp://ftp.mozilla.org/pub/xulrunner/releases/1.8.1.3/contrib/win32/
        ///and {0} from here: {1} (for GheckoFx {0})
        ///When you are finished downloading extract the package to a path of your choice. Then in mRemoteNC go to Tools - Options - Advanced and enter the correct path in the XULrunner path field.
        ///
        ///Or I can do it for you..
        /// </summary>
        internal static string ProblemFixer_FixGeckoProblem_ {
            get {
                return ResourceManager.GetString("ProblemFixer_FixGeckoProblem_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download and setup XULrunner {0}.
        /// </summary>
        internal static string ProblemFixer_FixGeckoProblem_Download_and_setup_XULrunner_Latest {
            get {
                return ResourceManager.GetString("ProblemFixer_FixGeckoProblem_Download_and_setup_XULrunner_Latest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gecko: problem found.
        /// </summary>
        internal static string ProblemFixer_FixGeckoProblem_Gecko__problem_found {
            get {
                return ResourceManager.GetString("ProblemFixer_FixGeckoProblem_Gecko__problem_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open XULrunner 1.8.1 Download page.
        /// </summary>
        internal static string ProblemFixer_FixGeckoProblem_Open_XULrunner_1_8_1_Download_page {
            get {
                return ResourceManager.GetString("ProblemFixer_FixGeckoProblem_Open_XULrunner_1_8_1_Download_page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open XULrunner {0} Download page.
        /// </summary>
        internal static string ProblemFixer_FixGeckoProblem_Open_XULrunner_Latest_Download_page {
            get {
                return ResourceManager.GetString("ProblemFixer_FixGeckoProblem_Open_XULrunner_Latest_Download_page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Xulrunner folder not found.
        /// </summary>
        internal static string ProblemFixer_FixGeckoProblem_Xulrunner_folder_not_found {
            get {
                return ResourceManager.GetString("ProblemFixer_FixGeckoProblem_Xulrunner_folder_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Xulrunner found, but not set in options.
        /// </summary>
        internal static string ProblemFixer_FixGeckoProblem_Xulrunner_found__but_not_set_in_options {
            get {
                return ResourceManager.GetString("ProblemFixer_FixGeckoProblem_Xulrunner_found__but_not_set_in_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You should setup Xulrunner path in options or I can do it for you..
        /// </summary>
        internal static string ProblemFixer_FixGeckoProblem_You_should_setup_Xulrunner_path {
            get {
                return ResourceManager.GetString("ProblemFixer_FixGeckoProblem_You_should_setup_Xulrunner_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download and install PuTTY.
        /// </summary>
        internal static string ProblemFixer_FixPuTTYProblem_Download_and_install_PuTTY {
            get {
                return ResourceManager.GetString("ProblemFixer_FixPuTTYProblem_Download_and_install_PuTTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open mRemoteNC Download page.
        /// </summary>
        internal static string ProblemFixer_FixPuTTYProblem_Open_mRemoteNC_Download_page {
            get {
                return ResourceManager.GetString("ProblemFixer_FixPuTTYProblem_Open_mRemoteNC_Download_page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open PuTTY download page.
        /// </summary>
        internal static string ProblemFixer_FixPuTTYProblem_Open_PuTTY_download_page {
            get {
                return ResourceManager.GetString("ProblemFixer_FixPuTTYProblem_Open_PuTTY_download_page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PuTTY: problem found.
        /// </summary>
        internal static string ProblemFixer_FixPuTTYProblem_PuTTY__problem_found {
            get {
                return ResourceManager.GetString("ProblemFixer_FixPuTTYProblem_PuTTY__problem_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PuTTY not found. Reinstall mRemoteNC or set PuTTY path in Options..
        /// </summary>
        internal static string ProblemFixer_FixPuTTYProblem_PuTTY_not_found__Reinstall_mRemoteNC_or_set_PuTTY_path_in_Options_ {
            get {
                return ResourceManager.GetString("ProblemFixer_FixPuTTYProblem_PuTTY_not_found__Reinstall_mRemoteNC_or_set_PuTTY_pa" +
                        "th_in_Options_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open RAdmin Download page.
        /// </summary>
        internal static string ProblemFixer_FixRAdminProblem_Open_RAdmin_Download_page {
            get {
                return ResourceManager.GetString("ProblemFixer_FixRAdminProblem_Open_RAdmin_Download_page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RAdmin: Problem found.
        /// </summary>
        internal static string ProblemFixer_FixRAdminProblem_RAdmin__Problem_found {
            get {
                return ResourceManager.GetString("ProblemFixer_FixRAdminProblem_RAdmin__Problem_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RAdmin found, but not set in options.
        /// </summary>
        internal static string ProblemFixer_FixRAdminProblem_RAdmin_found__but_not_set_in_options {
            get {
                return ResourceManager.GetString("ProblemFixer_FixRAdminProblem_RAdmin_found__but_not_set_in_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RAdmin not found, neither installed nor portable.
        /// </summary>
        internal static string ProblemFixer_FixRAdminProblem_RAdmin_not_found__neither_installed_nor_portable {
            get {
                return ResourceManager.GetString("ProblemFixer_FixRAdminProblem_RAdmin_not_found__neither_installed_nor_portable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You shold install RAdmin or setup RAdmin  path manualy in Options. After installing(or unpacking portable version), set path in mRemoteNC&apos;s Options menu..
        /// </summary>
        internal static string ProblemFixer_FixRAdminProblem_You_shold_install_RAdmin_or_setup_RAdmin_path {
            get {
                return ResourceManager.GetString("ProblemFixer_FixRAdminProblem_You_shold_install_RAdmin_or_setup_RAdmin_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You should setup RAdmin path in options or I can do it for you..
        /// </summary>
        internal static string ProblemFixer_FixRAdminProblem_You_should_setup_TeamViewer_path_in_options_or_I_can_do_it_for_you_ {
            get {
                return ResourceManager.GetString("ProblemFixer_FixRAdminProblem_You_should_setup_TeamViewer_path_in_options_or_I_ca" +
                        "n_do_it_for_you_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Options.
        /// </summary>
        internal static string ProblemFixer_FixTVProblem_Open_Options {
            get {
                return ResourceManager.GetString("ProblemFixer_FixTVProblem_Open_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open TeamViewer Download page.
        /// </summary>
        internal static string ProblemFixer_FixTVProblem_Open_TeamViewer_Download_page {
            get {
                return ResourceManager.GetString("ProblemFixer_FixTVProblem_Open_TeamViewer_Download_page", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Setup path.
        /// </summary>
        internal static string ProblemFixer_FixTVProblem_Setup_path {
            get {
                return ResourceManager.GetString("ProblemFixer_FixTVProblem_Setup_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TeamViewer found, but not set in options.
        /// </summary>
        internal static string ProblemFixer_FixTVProblem_TeamViewer_found__but_not_set_in_options {
            get {
                return ResourceManager.GetString("ProblemFixer_FixTVProblem_TeamViewer_found__but_not_set_in_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TeamViewer not found, neither installed nor portable.
        /// </summary>
        internal static string ProblemFixer_FixTVProblem_TeamViewer_not_found__neither_installed_nor_portable {
            get {
                return ResourceManager.GetString("ProblemFixer_FixTVProblem_TeamViewer_not_found__neither_installed_nor_portable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You shold install TeamViewer or setup TeamViewer path manualy in Options. After installing(or unpacking portable version), set path in mRemoteNC&apos;s Options menu..
        /// </summary>
        internal static string ProblemFixer_FixTVProblem_You_shold_install_TeamViewer {
            get {
                return ResourceManager.GetString("ProblemFixer_FixTVProblem_You_shold_install_TeamViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You should setup TeamViewer path in options or I can do it for you..
        /// </summary>
        internal static string ProblemFixer_FixTVProblem_You_should_setup_TeamViewer {
            get {
                return ResourceManager.GetString("ProblemFixer_FixTVProblem_You_should_setup_TeamViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Host:.
        /// </summary>
        internal static string QuickHostScanner_ApplyLanguage_Host_ {
            get {
                return ResourceManager.GetString("QuickHostScanner_ApplyLanguage_Host_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port.
        /// </summary>
        internal static string QuickHostScanner_ApplyLanguage_Port {
            get {
                return ResourceManager.GetString("QuickHostScanner_ApplyLanguage_Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ports.
        /// </summary>
        internal static string QuickHostScanner_ApplyLanguage_Ports {
            get {
                return ResourceManager.GetString("QuickHostScanner_ApplyLanguage_Ports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol.
        /// </summary>
        internal static string QuickHostScanner_ApplyLanguage_Protocol {
            get {
                return ResourceManager.GetString("QuickHostScanner_ApplyLanguage_Protocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на QuickHostScanner.
        /// </summary>
        internal static string QuickHostScanner_ApplyLanguage_QuickHostScanner {
            get {
                return ResourceManager.GetString("QuickHostScanner_ApplyLanguage_QuickHostScanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scan.
        /// </summary>
        internal static string QuickHostScanner_ApplyLanguage_Scan {
            get {
                return ResourceManager.GetString("QuickHostScanner_ApplyLanguage_Scan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status.
        /// </summary>
        internal static string QuickHostScanner_ApplyLanguage_Status {
            get {
                return ResourceManager.GetString("QuickHostScanner_ApplyLanguage_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checking....
        /// </summary>
        internal static string QuickHostScanner_button1_Click_Checking___ {
            get {
                return ResourceManager.GetString("QuickHostScanner_button1_Click_Checking___", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add as new.
        /// </summary>
        internal static string QuickHostScanner_lstStatus_MouseClick_Add_as_new {
            get {
                return ResourceManager.GetString("QuickHostScanner_lstStatus_MouseClick_Add_as_new", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add this connection?.
        /// </summary>
        internal static string QuickHostScanner_lstStatus_MouseClick_Add_this_connection_ {
            get {
                return ResourceManager.GetString("QuickHostScanner_lstStatus_MouseClick_Add_this_connection_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Adding connection.
        /// </summary>
        internal static string QuickHostScanner_lstStatus_MouseClick_Adding_connection {
            get {
                return ResourceManager.GetString("QuickHostScanner_lstStatus_MouseClick_Adding_connection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set service.
        /// </summary>
        internal static string QuickHostScanner_lstStatus_MouseClick_Set_service {
            get {
                return ResourceManager.GetString("QuickHostScanner_lstStatus_MouseClick_Set_service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Down.
        /// </summary>
        internal static string QuickHostScanner_TestAsync_Down {
            get {
                return ResourceManager.GetString("QuickHostScanner_TestAsync_Down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Up.
        /// </summary>
        internal static string QuickHostScanner_TestAsync_Up {
            get {
                return ResourceManager.GetString("QuickHostScanner_TestAsync_Up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full.
        /// </summary>
        internal static string SSHTransfer_ApplyLanguage_Full {
            get {
                return ResourceManager.GetString("SSHTransfer_ApplyLanguage_Full", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на List.
        /// </summary>
        internal static string SSHTransfer_ApplyLanguage_List {
            get {
                return ResourceManager.GetString("SSHTransfer_ApplyLanguage_List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Simple.
        /// </summary>
        internal static string SSHTransfer_ApplyLanguage_Simple {
            get {
                return ResourceManager.GetString("SSHTransfer_ApplyLanguage_Simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Destination directory:{2}.
        /// </summary>
        internal static string SSHTransfer_DownloadFilesFromServer_Destination_directory__2_ {
            get {
                return ResourceManager.GetString("SSHTransfer_DownloadFilesFromServer_Destination_directory__2_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download {0} in {1} files?.
        /// </summary>
        internal static string SSHTransfer_DownloadFilesFromServer_Download__0__in__1__files_ {
            get {
                return ResourceManager.GetString("SSHTransfer_DownloadFilesFromServer_Download__0__in__1__files_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download finished.
        /// </summary>
        internal static string SSHTransfer_DownloadFilesFromServer_Download_finished {
            get {
                return ResourceManager.GetString("SSHTransfer_DownloadFilesFromServer_Download_finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Upload completed..
        /// </summary>
        internal static string SSHTransfer_StartTransfer_Upload_completed_ {
            get {
                return ResourceManager.GetString("SSHTransfer_StartTransfer_Upload_completed_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download.
        /// </summary>
        internal static string SSHTransfer_Upload_Download {
            get {
                return ResourceManager.GetString("SSHTransfer_Upload_Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Transfer.
        /// </summary>
        internal static string SSHTransfer_Upload_Transfer {
            get {
                return ResourceManager.GetString("SSHTransfer_Upload_Transfer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Upload.
        /// </summary>
        internal static string SSHTransfer_Upload_Upload {
            get {
                return ResourceManager.GetString("SSHTransfer_Upload_Upload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About.
        /// </summary>
        internal static string strAbout {
            get {
                return ResourceManager.GetString("strAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Active.
        /// </summary>
        internal static string strActive {
            get {
                return ResourceManager.GetString("strActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activity.
        /// </summary>
        internal static string strActivity {
            get {
                return ResourceManager.GetString("strActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Connection.
        /// </summary>
        internal static string strAddConnection {
            get {
                return ResourceManager.GetString("strAddConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New folder.
        /// </summary>
        internal static string strAddFolder {
            get {
                return ResourceManager.GetString("strAddFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на AddNodeFromXML failed!.
        /// </summary>
        internal static string strAddNodeFromXmlFailed {
            get {
                return ResourceManager.GetString("strAddNodeFromXmlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на AddNodesFromSQL failed!.
        /// </summary>
        internal static string strAddNodesFromSqlFailed {
            get {
                return ResourceManager.GetString("strAddNodesFromSqlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Allow only a single instance of the application (mRemoteNC restart required).
        /// </summary>
        internal static string strAllowOnlySingleInstance {
            get {
                return ResourceManager.GetString("strAllowOnlySingleInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Always.
        /// </summary>
        internal static string strAlways {
            get {
                return ResourceManager.GetString("strAlways", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Always connect, even if authentication fails.
        /// </summary>
        internal static string strAlwaysConnectEvenIfAuthFails {
            get {
                return ResourceManager.GetString("strAlwaysConnectEvenIfAuthFails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Always show panel selection dialog when opening connections.
        /// </summary>
        internal static string strAlwaysShowPanelSelection {
            get {
                return ResourceManager.GetString("strAlwaysShowPanelSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Always show notification area icon.
        /// </summary>
        internal static string strAlwaysShowSysTrayIcon {
            get {
                return ResourceManager.GetString("strAlwaysShowSysTrayIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ask me again later.
        /// </summary>
        internal static string strAskUpdatesCommandAskLater {
            get {
                return ResourceManager.GetString("strAskUpdatesCommandAskLater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Customize the settings now.
        /// </summary>
        internal static string strAskUpdatesCommandCustom {
            get {
                return ResourceManager.GetString("strAskUpdatesCommandCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use the recommended settings.
        /// </summary>
        internal static string strAskUpdatesCommandRecommended {
            get {
                return ResourceManager.GetString("strAskUpdatesCommandRecommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} can automatically check for updates that may provide new features and bug fixes. It is recommended that you allow {0} to check for updates weekly..
        /// </summary>
        internal static string strAskUpdatesContent {
            get {
                return ResourceManager.GetString("strAskUpdatesContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatic update settings.
        /// </summary>
        internal static string strAskUpdatesMainInstruction {
            get {
                return ResourceManager.GetString("strAskUpdatesMainInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Aspect.
        /// </summary>
        internal static string strAspect {
            get {
                return ResourceManager.GetString("strAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatically get session information.
        /// </summary>
        internal static string strAutomaticallyGetSessionInfo {
            get {
                return ResourceManager.GetString("strAutomaticallyGetSessionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto save every:.
        /// </summary>
        internal static string strAutoSaveEvery {
            get {
                return ResourceManager.GetString("strAutoSaveEvery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Minutes (0 means disabled).
        /// </summary>
        internal static string strAutoSaveMins {
            get {
                return ResourceManager.GetString("strAutoSaveMins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current Version.
        /// </summary>
        internal static string strAvailableVersion {
            get {
                return ResourceManager.GetString("strAvailableVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Browse....
        /// </summary>
        internal static string strButtonBrowse {
            get {
                return ResourceManager.GetString("strButtonBrowse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Cancel.
        /// </summary>
        internal static string strButtonCancel {
            get {
                return ResourceManager.GetString("strButtonCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change.
        /// </summary>
        internal static string strButtonChange {
            get {
                return ResourceManager.GetString("strButtonChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Close.
        /// </summary>
        internal static string strButtonClose {
            get {
                return ResourceManager.GetString("strButtonClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Default Inheritance.
        /// </summary>
        internal static string strButtonDefaultInheritance {
            get {
                return ResourceManager.GetString("strButtonDefaultInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Default Properties.
        /// </summary>
        internal static string strButtonDefaultProperties {
            get {
                return ResourceManager.GetString("strButtonDefaultProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect.
        /// </summary>
        internal static string strButtonDisconnect {
            get {
                return ResourceManager.GetString("strButtonDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Icon.
        /// </summary>
        internal static string strButtonIcon {
            get {
                return ResourceManager.GetString("strButtonIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Import.
        /// </summary>
        internal static string strButtonImport {
            get {
                return ResourceManager.GetString("strButtonImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Inheritance.
        /// </summary>
        internal static string strButtonInheritance {
            get {
                return ResourceManager.GetString("strButtonInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Launch PuTTY.
        /// </summary>
        internal static string strButtonLaunchPutty {
            get {
                return ResourceManager.GetString("strButtonLaunchPutty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;New.
        /// </summary>
        internal static string strButtonNew {
            get {
                return ResourceManager.GetString("strButtonNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;OK.
        /// </summary>
        internal static string strButtonOK {
            get {
                return ResourceManager.GetString("strButtonOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Properties.
        /// </summary>
        internal static string strButtonProperties {
            get {
                return ResourceManager.GetString("strButtonProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Scan.
        /// </summary>
        internal static string strButtonScan {
            get {
                return ResourceManager.GetString("strButtonScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Stop.
        /// </summary>
        internal static string strButtonStop {
            get {
                return ResourceManager.GetString("strButtonStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Test Proxy.
        /// </summary>
        internal static string strButtonTestProxy {
            get {
                return ResourceManager.GetString("strButtonTestProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You cannot import a normal connection file.
        ///Please use File - Load Connections for normal connection files!.
        /// </summary>
        internal static string strCannotImportNormalSessionFile {
            get {
                return ResourceManager.GetString("strCannotImportNormalSessionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot start Port Scan, incorrect IP format!.
        /// </summary>
        internal static string strCannotStartPortScan {
            get {
                return ResourceManager.GetString("strCannotStartPortScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Appearance.
        /// </summary>
        internal static string strCategoryAppearance {
            get {
                return ResourceManager.GetString("strCategoryAppearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection.
        /// </summary>
        internal static string strCategoryConnection {
            get {
                return ResourceManager.GetString("strCategoryConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Credentials.
        /// </summary>
        internal static string strCategoryCredentials {
            get {
                return ResourceManager.GetString("strCategoryCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display.
        /// </summary>
        internal static string strCategoryDisplay {
            get {
                return ResourceManager.GetString("strCategoryDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gateway.
        /// </summary>
        internal static string strCategoryGateway {
            get {
                return ResourceManager.GetString("strCategoryGateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        internal static string strCategoryGeneral {
            get {
                return ResourceManager.GetString("strCategoryGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Miscellaneous.
        /// </summary>
        internal static string strCategoryMiscellaneous {
            get {
                return ResourceManager.GetString("strCategoryMiscellaneous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol.
        /// </summary>
        internal static string strCategoryProtocol {
            get {
                return ResourceManager.GetString("strCategoryProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Redirect.
        /// </summary>
        internal static string strCategoryRedirect {
            get {
                return ResourceManager.GetString("strCategoryRedirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Always show this screen at startup.
        /// </summary>
        internal static string strCcAlwaysShowScreen {
            get {
                return ResourceManager.GetString("strCcAlwaysShowScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh.
        /// </summary>
        internal static string strCcCheckAgain {
            get {
                return ResourceManager.GetString("strCcCheckAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check failed!.
        /// </summary>
        internal static string strCcCheckFailed {
            get {
                return ResourceManager.GetString("strCcCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check succeeded!.
        /// </summary>
        internal static string strCcCheckSucceeded {
            get {
                return ResourceManager.GetString("strCcCheckSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;-- Click on red sign, to get more details..
        /// </summary>
        internal static string strCcClickOnSign {
            get {
                return ResourceManager.GetString("strCcClickOnSign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The (RDP) Sessions feature requires that you have a registered copy of eolwtscom.dll on your system.
        ///mRemoteNC ships with this component but will not register it automatically unless you run the setup package.
        ///To do register it manually do this: Open up the run dialog (Start - Run) and enter the following: regsvr32 &quot;c:\Program Files\mRemoteNC\eolwtscom.dll&quot; (Where c:\Program Files\mRemoteNC\ is the path to your mRemoteNC installation).
        ///If you are still not able to pass this check or use the (RDP) Session [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string strCcEOLFailed {
            get {
                return ResourceManager.GetString("strCcEOLFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EOLWTSCOM was found and seems to be registered properly..
        /// </summary>
        internal static string strCcEOLOK {
            get {
                return ResourceManager.GetString("strCcEOLOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на XULrunner was found and seems to be installed properly..
        /// </summary>
        internal static string strCcGeckoOK {
            get {
                return ResourceManager.GetString("strCcGeckoOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ICA requires that the XenDesktop Online Plugin is installed and that the wfica.ocx library is registered. You can download the client here: http://www.citrix.com/download/
        ///If you have the XenDesktop Online Plugin installed and the check still fails, try to register wfica.ocx manually.
        ///To do this open up the run dialog (Start - Run) and enter the following: regsvr32 &quot;c:\Program Files\Citrix\ICA Client\wfica.ocx&quot; (Where c:\Program Files\Citrix\ICA Client\ is the path to your XenDesktop Online Plugin install [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string strCcICAFailed {
            get {
                return ResourceManager.GetString("strCcICAFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All ICA components were found and seem to be registered properly.
        ///Citrix ICA Client Control Version {0}.
        /// </summary>
        internal static string strCcICAOK {
            get {
                return ResourceManager.GetString("strCcICAOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на not installed properly.
        /// </summary>
        internal static string strCcNotInstalledProperly {
            get {
                return ResourceManager.GetString("strCcNotInstalledProperly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The SSH, Telnet, Rlogin and RAW protocols need PuTTY to work. PuTTY comes with every mRemoteNC package and is located in the installation path.
        ///Please make sure that either you have the Putty.exe in your mRemoteNC directory (default: c:\Program Files\mRemoteNC\) or that you specified a valid path to your PuTTY executable in the Options (Tools - Options - Advanced - Custom PuTTY path).
        /// </summary>
        internal static string strCcPuttyFailed {
            get {
                return ResourceManager.GetString("strCcPuttyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The PuTTY executable was found and should be ready to use..
        /// </summary>
        internal static string strCcPuttyOK {
            get {
                return ResourceManager.GetString("strCcPuttyOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For RDP to work properly you need to have at least Remote Desktop Connection (Terminal Services Client) 6.1 installed. You can get it here: http://support.microsoft.com/kb/951616
        ///If you have RDP 6.1 installed and the check still fails, try to register mstscax.dll manually. To do this open up the run dialog (Start - Run) and enter the following: regsvr32 &quot;c:\windows\system32\mstscax.dll&quot; (Where c:\ is your system drive).
        ///If you still have trouble getting RDP to work please consult the mRemoteNC Forum at ht [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string strCcRDPFailed {
            get {
                return ResourceManager.GetString("strCcRDPFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All RDP components were found and seem to be registered properly.
        ///Remote Desktop Connection Control Version {0}.
        /// </summary>
        internal static string strCcRDPOK {
            get {
                return ResourceManager.GetString("strCcRDPOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC requires VncSharpNG.dll to be located in your mRemoteNC application folder.
        ///Please make sure that you have the VncSharpNG.dll file in your mRemoteNC application folder (usually C:\Program Files\mRemoteNC\).
        ///If you are still not able to pass this check or use VNC in mRemoteNC please consult the mRemoteNC Forum at http://forum.mRemoteNC.org/.
        /// </summary>
        internal static string strCcVNCFailed {
            get {
                return ResourceManager.GetString("strCcVNCFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All VNC components were found and seem to be registered properly.
        ///VncSharpNG Control Version {0}.
        /// </summary>
        internal static string strCcVNCOK {
            get {
                return ResourceManager.GetString("strCcVNCOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatically try to reconnect when disconnected from server (RDP &amp;&amp; ICA only).
        /// </summary>
        internal static string strCheckboxAutomaticReconnect {
            get {
                return ResourceManager.GetString("strCheckboxAutomaticReconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Domain.
        /// </summary>
        internal static string strCheckboxDomain {
            get {
                return ResourceManager.GetString("strCheckboxDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do not show this message again..
        /// </summary>
        internal static string strCheckboxDoNotShowThisMessageAgain {
            get {
                return ResourceManager.GetString("strCheckboxDoNotShowThisMessageAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Inheritance.
        /// </summary>
        internal static string strCheckboxInheritance {
            get {
                return ResourceManager.GetString("strCheckboxInheritance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password.
        /// </summary>
        internal static string strCheckboxPassword {
            get {
                return ResourceManager.GetString("strCheckboxPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This proxy server requires authentication.
        /// </summary>
        internal static string strCheckboxProxyAuthentication {
            get {
                return ResourceManager.GetString("strCheckboxProxyAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use custom PuTTY path:.
        /// </summary>
        internal static string strCheckboxPuttyPath {
            get {
                return ResourceManager.GetString("strCheckboxPuttyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reconnect when ready.
        /// </summary>
        internal static string strCheckboxReconnectWhenReady {
            get {
                return ResourceManager.GetString("strCheckboxReconnectWhenReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use a proxy server to connect.
        /// </summary>
        internal static string strCheckboxUpdateUseProxy {
            get {
                return ResourceManager.GetString("strCheckboxUpdateUseProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username.
        /// </summary>
        internal static string strCheckboxUsername {
            get {
                return ResourceManager.GetString("strCheckboxUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wait for exit.
        /// </summary>
        internal static string strCheckboxWaitForExit {
            get {
                return ResourceManager.GetString("strCheckboxWaitForExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check Again.
        /// </summary>
        internal static string strCheckForUpdate {
            get {
                return ResourceManager.GetString("strCheckForUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check for updates and announcements at startup.
        /// </summary>
        internal static string strCheckForUpdatesOnStartup {
            get {
                return ResourceManager.GetString("strCheckForUpdatesOnStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check now.
        /// </summary>
        internal static string strCheckNow {
            get {
                return ResourceManager.GetString("strCheckNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check proper installation of components at startup.
        /// </summary>
        internal static string strCheckProperInstallationOfComponentsAtStartup {
            get {
                return ResourceManager.GetString("strCheckProperInstallationOfComponentsAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose panel before connecting.
        /// </summary>
        internal static string strChoosePanelBeforeConnecting {
            get {
                return ResourceManager.GetString("strChoosePanelBeforeConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Closed Ports.
        /// </summary>
        internal static string strClosedPorts {
            get {
                return ResourceManager.GetString("strClosedPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Collapse all folders.
        /// </summary>
        internal static string strCollapseAllFolders {
            get {
                return ResourceManager.GetString("strCollapseAllFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Arguments.
        /// </summary>
        internal static string strColumnArguments {
            get {
                return ResourceManager.GetString("strColumnArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display Name.
        /// </summary>
        internal static string strColumnDisplayName {
            get {
                return ResourceManager.GetString("strColumnDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filename.
        /// </summary>
        internal static string strColumnFilename {
            get {
                return ResourceManager.GetString("strColumnFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hostname/IP.
        /// </summary>
        internal static string strColumnHostnameIP {
            get {
                return ResourceManager.GetString("strColumnHostnameIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message.
        /// </summary>
        internal static string strColumnMessage {
            get {
                return ResourceManager.GetString("strColumnMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username.
        /// </summary>
        internal static string strColumnUsername {
            get {
                return ResourceManager.GetString("strColumnUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wait For Exit.
        /// </summary>
        internal static string strColumnWaitForExit {
            get {
                return ResourceManager.GetString("strColumnWaitForExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t parse command line args!.
        /// </summary>
        internal static string strCommandLineArgsCouldNotBeParsed {
            get {
                return ResourceManager.GetString("strCommandLineArgsCouldNotBeParsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Components Check.
        /// </summary>
        internal static string strComponentsCheck {
            get {
                return ResourceManager.GetString("strComponentsCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на btnIcon_Click failed!.
        /// </summary>
        internal static string strConfigPropertyGridButtonIconClickFailed {
            get {
                return ResourceManager.GetString("strConfigPropertyGridButtonIconClickFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ShowHideGridItems failed!.
        /// </summary>
        internal static string strConfigPropertyGridHideItemsFailed {
            get {
                return ResourceManager.GetString("strConfigPropertyGridHideItemsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IconMenu_Click failed!.
        /// </summary>
        internal static string strConfigPropertyGridMenuClickFailed {
            get {
                return ResourceManager.GetString("strConfigPropertyGridMenuClickFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Property Grid object failed!.
        /// </summary>
        internal static string strConfigPropertyGridObjectFailed {
            get {
                return ResourceManager.GetString("strConfigPropertyGridObjectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SetHostStatus failed!.
        /// </summary>
        internal static string strConfigPropertyGridSetHostStatusFailed {
            get {
                return ResourceManager.GetString("strConfigPropertyGridSetHostStatusFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на pGrid_PopertyValueChanged failed!.
        /// </summary>
        internal static string strConfigPropertyGridValueFailed {
            get {
                return ResourceManager.GetString("strConfigPropertyGridValueFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Config UI load failed!.
        /// </summary>
        internal static string strConfigUiLoadFailed {
            get {
                return ResourceManager.GetString("strConfigUiLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm closing connection tabs.
        /// </summary>
        internal static string strConfirmCloseConnection {
            get {
                return ResourceManager.GetString("strConfirmCloseConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to close the connection, &quot;{0}&quot;?.
        /// </summary>
        internal static string strConfirmCloseConnectionMainInstruction {
            get {
                return ResourceManager.GetString("strConfirmCloseConnectionMainInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to close the panel, &quot;{0}&quot;? Any connections that it contains will also be closed..
        /// </summary>
        internal static string strConfirmCloseConnectionPanelMainInstruction {
            get {
                return ResourceManager.GetString("strConfirmCloseConnectionPanelMainInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to delete the external tool, &quot;{0}&quot;?.
        /// </summary>
        internal static string strConfirmDeleteExternalTool {
            get {
                return ResourceManager.GetString("strConfirmDeleteExternalTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to delete the {0} selected external tools?.
        /// </summary>
        internal static string strConfirmDeleteExternalToolMultiple {
            get {
                return ResourceManager.GetString("strConfirmDeleteExternalToolMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to delete the connection, &quot;{0}&quot;?.
        /// </summary>
        internal static string strConfirmDeleteNodeConnection {
            get {
                return ResourceManager.GetString("strConfirmDeleteNodeConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to delete the empty folder, &quot;{0}&quot;?.
        /// </summary>
        internal static string strConfirmDeleteNodeFolder {
            get {
                return ResourceManager.GetString("strConfirmDeleteNodeFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to delete the folder, &quot;{0}&quot;? Any folders or connections that it contains will also be deleted..
        /// </summary>
        internal static string strConfirmDeleteNodeFolderNotEmpty {
            get {
                return ResourceManager.GetString("strConfirmDeleteNodeFolderNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Confirm exit if there are open connections.
        /// </summary>
        internal static string strConfirmExit {
            get {
                return ResourceManager.GetString("strConfirmExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to close all open connections?.
        /// </summary>
        internal static string strConfirmExitMainInstruction {
            get {
                return ResourceManager.GetString("strConfirmExitMainInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure you want to reset the panels to their default layout?.
        /// </summary>
        internal static string strConfirmResetLayout {
            get {
                return ResourceManager.GetString("strConfirmResetLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect.
        /// </summary>
        internal static string strConnect {
            get {
                return ResourceManager.GetString("strConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect in fullscreen mode.
        /// </summary>
        internal static string strConnectInFullscreen {
            get {
                return ResourceManager.GetString("strConnectInFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connecting....
        /// </summary>
        internal static string strConnecting {
            get {
                return ResourceManager.GetString("strConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol Event Connected.
        /// </summary>
        internal static string strConnectionEventConnected {
            get {
                return ResourceManager.GetString("strConnectionEventConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection to &quot;{0}&quot; via &quot;{1}&quot; established by user &quot;{2}&quot; (Description: &quot;{3}&quot;; User Field: &quot;{4}&quot;).
        /// </summary>
        internal static string strConnectionEventConnectedDetail {
            get {
                return ResourceManager.GetString("strConnectionEventConnectedDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conenction failed!.
        /// </summary>
        internal static string strConnectionEventConnectionFailed {
            get {
                return ResourceManager.GetString("strConnectionEventConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol Event ErrorOccured.
        /// </summary>
        internal static string strConnectionEventErrorOccured {
            get {
                return ResourceManager.GetString("strConnectionEventErrorOccured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Opening connection failed!.
        /// </summary>
        internal static string strConnectionOpenFailed {
            get {
                return ResourceManager.GetString("strConnectionOpenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot open connection: No hostname specified!.
        /// </summary>
        internal static string strConnectionOpenFailedNoHostname {
            get {
                return ResourceManager.GetString("strConnectionOpenFailedNoHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP error!
        ///Error Code: {0}
        ///Error Description: {1}.
        /// </summary>
        internal static string strConnectionRdpErrorDetail {
            get {
                return ResourceManager.GetString("strConnectionRdpErrorDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connections.
        /// </summary>
        internal static string strConnections {
            get {
                return ResourceManager.GetString("strConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t set default port!.
        /// </summary>
        internal static string strConnectionSetDefaultPortFailed {
            get {
                return ResourceManager.GetString("strConnectionSetDefaultPortFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t create backup of connections file!.
        /// </summary>
        internal static string strConnectionsFileBackupFailed {
            get {
                return ResourceManager.GetString("strConnectionsFileBackupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t import connections file!.
        /// </summary>
        internal static string strConnectionsFileCouldNotBeImported {
            get {
                return ResourceManager.GetString("strConnectionsFileCouldNotBeImported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connections file &quot;{0}&quot; could not be loaded!.
        /// </summary>
        internal static string strConnectionsFileCouldNotBeLoaded {
            get {
                return ResourceManager.GetString("strConnectionsFileCouldNotBeLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connections file &quot;{0}&quot; could not be loaded!
        ///Starting with new connections file..
        /// </summary>
        internal static string strConnectionsFileCouldNotBeLoadedNew {
            get {
                return ResourceManager.GetString("strConnectionsFileCouldNotBeLoadedNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t save connections file!.
        /// </summary>
        internal static string strConnectionsFileCouldNotBeSaved {
            get {
                return ResourceManager.GetString("strConnectionsFileCouldNotBeSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t save connections file as &quot;{0}&quot;!.
        /// </summary>
        internal static string strConnectionsFileCouldNotSaveAs {
            get {
                return ResourceManager.GetString("strConnectionsFileCouldNotSaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect to console session.
        /// </summary>
        internal static string strConnectToConsoleSession {
            get {
                return ResourceManager.GetString("strConnectToConsoleSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect (with options).
        /// </summary>
        internal static string strConnectWithOptions {
            get {
                return ResourceManager.GetString("strConnectWithOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection to {0} via {1} closed by user {2}..
        /// </summary>
        internal static string strConnenctionClosedByUser {
            get {
                return ResourceManager.GetString("strConnenctionClosedByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection to {0} via {1} closed by user {2}.  (Description: &quot;{3}&quot;; User Field: &quot;{4}&quot;).
        /// </summary>
        internal static string strConnenctionClosedByUserDetail {
            get {
                return ResourceManager.GetString("strConnenctionClosedByUserDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection Event Closed.
        /// </summary>
        internal static string strConnenctionCloseEvent {
            get {
                return ResourceManager.GetString("strConnenctionCloseEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection Event Closed failed!.
        /// </summary>
        internal static string strConnenctionCloseEventFailed {
            get {
                return ResourceManager.GetString("strConnenctionCloseEventFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t create new connections file!.
        /// </summary>
        internal static string strCouldNotCreateNewConnectionsFile {
            get {
                return ResourceManager.GetString("strCouldNotCreateNewConnectionsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Could not find ToolStrip control in FilteredPropertyGrid..
        /// </summary>
        internal static string strCouldNotFindToolStripInFilteredPropertyGrid {
            get {
                return ResourceManager.GetString("strCouldNotFindToolStripInFilteredPropertyGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Installed version.
        /// </summary>
        internal static string strCurrentVersion {
            get {
                return ResourceManager.GetString("strCurrentVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Detect.
        /// </summary>
        internal static string strDetect {
            get {
                return ResourceManager.GetString("strDetect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Don&apos;t connect if authentication fails.
        /// </summary>
        internal static string strDontConnectWhenAuthFails {
            get {
                return ResourceManager.GetString("strDontConnectWhenAuthFails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Double click on tab closes it.
        /// </summary>
        internal static string strDoubleClickTabClosesIt {
            get {
                return ResourceManager.GetString("strDoubleClickTabClosesIt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download and Install.
        /// </summary>
        internal static string strDownloadAndInstall {
            get {
                return ResourceManager.GetString("strDownloadAndInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate.
        /// </summary>
        internal static string strDuplicate {
            get {
                return ResourceManager.GetString("strDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to continue with no password?.
        /// </summary>
        internal static string strEmptyPasswordContinue {
            get {
                return ResourceManager.GetString("strEmptyPasswordContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For empty Username, Password or Domain fields use:.
        /// </summary>
        internal static string strEmptyUsernamePasswordDomainFields {
            get {
                return ResourceManager.GetString("strEmptyUsernamePasswordDomainFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 128-bit.
        /// </summary>
        internal static string strEnc128Bit {
            get {
                return ResourceManager.GetString("strEnc128Bit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 128-bit (logon only).
        /// </summary>
        internal static string strEnc128BitLogonOnly {
            get {
                return ResourceManager.GetString("strEnc128BitLogonOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 40-bit.
        /// </summary>
        internal static string strEnc40Bit {
            get {
                return ResourceManager.GetString("strEnc40Bit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 56-bit.
        /// </summary>
        internal static string strEnc56Bit {
            get {
                return ResourceManager.GetString("strEnc56Bit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Basic.
        /// </summary>
        internal static string strEncBasic {
            get {
                return ResourceManager.GetString("strEncBasic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Completely encrypt connection file.
        /// </summary>
        internal static string strEncryptCompleteConnectionFile {
            get {
                return ResourceManager.GetString("strEncryptCompleteConnectionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на End IP.
        /// </summary>
        internal static string strEndIP {
            get {
                return ResourceManager.GetString("strEndIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на End Port.
        /// </summary>
        internal static string strEndPort {
            get {
                return ResourceManager.GetString("strEndPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на AddExternalToolsToToolBar (frmMain) failed. {0}.
        /// </summary>
        internal static string strErrorAddExternalToolsToToolBarFailed {
            get {
                return ResourceManager.GetString("strErrorAddExternalToolsToToolBarFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на AddFolder (UI.Window.Tree) failed. {0}.
        /// </summary>
        internal static string strErrorAddFolderFailed {
            get {
                return ResourceManager.GetString("strErrorAddFolderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The database version {0} is not compatible with this version of {1}..
        /// </summary>
        internal static string strErrorBadDatabaseVersion {
            get {
                return ResourceManager.GetString("strErrorBadDatabaseVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CloneNode (Tree.Node) failed . {0}.
        /// </summary>
        internal static string strErrorCloneNodeFailed {
            get {
                return ResourceManager.GetString("strErrorCloneNodeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error code {0}..
        /// </summary>
        internal static string strErrorCode {
            get {
                return ResourceManager.GetString("strErrorCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The connection list could not be saved..
        /// </summary>
        internal static string strErrorConnectionListSaveFailed {
            get {
                return ResourceManager.GetString("strErrorConnectionListSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Decryption failed. {0}.
        /// </summary>
        internal static string strErrorDecryptionFailed {
            get {
                return ResourceManager.GetString("strErrorDecryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Encryption failed. {0}.
        /// </summary>
        internal static string strErrorEncryptionFailed {
            get {
                return ResourceManager.GetString("strErrorEncryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The Windows security setting, &quot;System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing&quot;, is enabled. This setting is not compatible with {0}.
        ///
        ///See the Microsoft Support article at http://support.microsoft.com/kb/811833 for more information.
        ///
        ///{0} will now close..
        /// </summary>
        internal static string strErrorFipsPolicyIncompatible {
            get {
                return ResourceManager.GetString("strErrorFipsPolicyIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Errors.
        /// </summary>
        internal static string strErrors {
            get {
                return ResourceManager.GetString("strErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The startup connection file could not be loaded.{0}{0}{2}{0}{3}{0}{0}In order to prevent data loss, {1} will now exit..
        /// </summary>
        internal static string strErrorStartupConnectionFileLoad {
            get {
                return ResourceManager.GetString("strErrorStartupConnectionFileLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VerifyDatabaseVersion (Config.Connections.Save) failed. {0}.
        /// </summary>
        internal static string strErrorVerifyDatabaseVersionFailed {
            get {
                return ResourceManager.GetString("strErrorVerifyDatabaseVersionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Expand all folders.
        /// </summary>
        internal static string strExpandAllFolders {
            get {
                return ResourceManager.GetString("strExpandAllFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Experimental.
        /// </summary>
        internal static string strExperimental {
            get {
                return ResourceManager.GetString("strExperimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export.
        /// </summary>
        internal static string strExport {
            get {
                return ResourceManager.GetString("strExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export mRemote/mRemoteNC XML.
        /// </summary>
        internal static string strExportmRemoteXML {
            get {
                return ResourceManager.GetString("strExportmRemoteXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ext. App.
        /// </summary>
        internal static string strExtApp {
            get {
                return ResourceManager.GetString("strExtApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Includes icons by [FAMFAMFAM].
        /// </summary>
        internal static string strFAMFAMFAMAttribution {
            get {
                return ResourceManager.GetString("strFAMFAMFAMAttribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на http://www.famfamfam.com/.
        /// </summary>
        internal static string strFAMFAMFAMAttributionURL {
            get {
                return ResourceManager.GetString("strFAMFAMFAMAttributionURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All Files (*.*).
        /// </summary>
        internal static string strFilterAll {
            get {
                return ResourceManager.GetString("strFilterAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application Files (*.exe).
        /// </summary>
        internal static string strFilterApplication {
            get {
                return ResourceManager.GetString("strFilterApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на mRemote CSV Files (*.csv).
        /// </summary>
        internal static string strFiltermRemoteCSV {
            get {
                return ResourceManager.GetString("strFiltermRemoteCSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на mRemote XML Files (*.xml).
        /// </summary>
        internal static string strFiltermRemoteXML {
            get {
                return ResourceManager.GetString("strFiltermRemoteXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP Files (*.rdp).
        /// </summary>
        internal static string strFilterRDP {
            get {
                return ResourceManager.GetString("strFilterRDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на visionapp Remote Desktop 2008 CSV Files (*.csv).
        /// </summary>
        internal static string strFiltervRD2008CSV {
            get {
                return ResourceManager.GetString("strFiltervRD2008CSV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Inherit {0}.
        /// </summary>
        internal static string strFormatInherit {
            get {
                return ResourceManager.GetString("strFormatInherit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Description of inherited property: {0}.
        /// </summary>
        internal static string strFormatInheritDescription {
            get {
                return ResourceManager.GetString("strFormatInheritDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Free.
        /// </summary>
        internal static string strFree {
            get {
                return ResourceManager.GetString("strFree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fullscreen.
        /// </summary>
        internal static string strFullscreen {
            get {
                return ResourceManager.GetString("strFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        internal static string strGeneral {
            get {
                return ResourceManager.GetString("strGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get Connection Info From SQL failed.
        /// </summary>
        internal static string strGetConnectionInfoFromSqlFailed {
            get {
                return ResourceManager.GetString("strGetConnectionInfoFromSqlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error occured while loading the connection entry for &quot;{0}&quot; from &quot;{1}&quot;. {2}.
        /// </summary>
        internal static string strGetConnectionInfoFromXmlFailed {
            get {
                return ResourceManager.GetString("strGetConnectionInfoFromXmlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatic Reconnect.
        /// </summary>
        internal static string strGroupboxAutomaticReconnect {
            get {
                return ResourceManager.GetString("strGroupboxAutomaticReconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection.
        /// </summary>
        internal static string strGroupboxConnection {
            get {
                return ResourceManager.GetString("strGroupboxConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на External Tool Properties.
        /// </summary>
        internal static string strGroupboxExternalToolProperties {
            get {
                return ResourceManager.GetString("strGroupboxExternalToolProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Files.
        /// </summary>
        internal static string strGroupboxFiles {
            get {
                return ResourceManager.GetString("strGroupboxFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Host.
        /// </summary>
        internal static string strHost {
            get {
                return ResourceManager.GetString("strHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HTTP.
        /// </summary>
        internal static string strHttp {
            get {
                return ResourceManager.GetString("strHttp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HTTP Connect Failed!.
        /// </summary>
        internal static string strHttpConnectFailed {
            get {
                return ResourceManager.GetString("strHttpConnectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t create new HTTP Connection!.
        /// </summary>
        internal static string strHttpConnectionFailed {
            get {
                return ResourceManager.GetString("strHttpConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changeing HTTP Document Tile Failed!.
        /// </summary>
        internal static string strHttpDocumentTileChangeFailed {
            get {
                return ResourceManager.GetString("strHttpDocumentTileChangeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gecko.
        /// </summary>
        internal static string strHttpGecko {
            get {
                return ResourceManager.GetString("strHttpGecko", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GheckoFX.
        /// </summary>
        internal static string strHttpGeckoFX {
            get {
                return ResourceManager.GetString("strHttpGeckoFX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Internet Explorer.
        /// </summary>
        internal static string strHttpInternetExplorer {
            get {
                return ResourceManager.GetString("strHttpInternetExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на HTTPS.
        /// </summary>
        internal static string strHttps {
            get {
                return ResourceManager.GetString("strHttps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set HTTP Props failed!.
        /// </summary>
        internal static string strHttpSetPropsFailed {
            get {
                return ResourceManager.GetString("strHttpSetPropsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ICA.
        /// </summary>
        internal static string strICA {
            get {
                return ResourceManager.GetString("strICA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t create new ICA Connection!.
        /// </summary>
        internal static string strIcaConnectionFailed {
            get {
                return ResourceManager.GetString("strIcaConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading ICA Plugin failed!.
        /// </summary>
        internal static string strIcaControlFailed {
            get {
                return ResourceManager.GetString("strIcaControlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ICA SetCredentials failed!.
        /// </summary>
        internal static string strIcaSetCredentialsFailed {
            get {
                return ResourceManager.GetString("strIcaSetCredentialsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ICA Set Event Handlers Failed!.
        /// </summary>
        internal static string strIcaSetEventHandlersFailed {
            get {
                return ResourceManager.GetString("strIcaSetEventHandlersFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ICA Set Props Failed!.
        /// </summary>
        internal static string strIcaSetPropsFailed {
            get {
                return ResourceManager.GetString("strIcaSetPropsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ICA Set Resolution Failed!.
        /// </summary>
        internal static string strIcaSetResolutionFailed {
            get {
                return ResourceManager.GetString("strIcaSetResolutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import from Active Directory.
        /// </summary>
        internal static string strImportAD {
            get {
                return ResourceManager.GetString("strImportAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import/Export.
        /// </summary>
        internal static string strImportExport {
            get {
                return ResourceManager.GetString("strImportExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import mRemote/mRemoteNC XML.
        /// </summary>
        internal static string strImportmRemoteXML {
            get {
                return ResourceManager.GetString("strImportmRemoteXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import from Port Scan.
        /// </summary>
        internal static string strImportPortScan {
            get {
                return ResourceManager.GetString("strImportPortScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import from .RDP file(s).
        /// </summary>
        internal static string strImportRDPFiles {
            get {
                return ResourceManager.GetString("strImportRDPFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Inactive.
        /// </summary>
        internal static string strInactive {
            get {
                return ResourceManager.GetString("strInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Informations.
        /// </summary>
        internal static string strInformations {
            get {
                return ResourceManager.GetString("strInformations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на mRemoteNC is up to date.
        /// </summary>
        internal static string strInheritNewConnection {
            get {
                return ResourceManager.GetString("strInheritNewConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection failed!.
        /// </summary>
        internal static string strIntAppConnectionFailed {
            get {
                return ResourceManager.GetString("strIntAppConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dispose of Int App process failed!.
        /// </summary>
        internal static string strIntAppDisposeFailed {
            get {
                return ResourceManager.GetString("strIntAppDisposeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Int App Focus Failed!.
        /// </summary>
        internal static string strIntAppFocusFailed {
            get {
                return ResourceManager.GetString("strIntAppFocusFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Int App Handle: {0}.
        /// </summary>
        internal static string strIntAppHandle {
            get {
                return ResourceManager.GetString("strIntAppHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Killing Int App Process failed!.
        /// </summary>
        internal static string strIntAppKillFailed {
            get {
                return ResourceManager.GetString("strIntAppKillFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Panel Handle: {0}.
        /// </summary>
        internal static string strIntAppParentHandle {
            get {
                return ResourceManager.GetString("strIntAppParentHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Int App Resize failed!.
        /// </summary>
        internal static string strIntAppResizeFailed {
            get {
                return ResourceManager.GetString("strIntAppResizeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --- IntApp Stuff ---.
        /// </summary>
        internal static string strIntAppStuff {
            get {
                return ResourceManager.GetString("strIntAppStuff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Int App Title: {0}.
        /// </summary>
        internal static string strIntAppTitle {
            get {
                return ResourceManager.GetString("strIntAppTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CTRL-ALT-DEL.
        /// </summary>
        internal static string strKeysCtrlAltDel {
            get {
                return ResourceManager.GetString("strKeysCtrlAltDel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на CTRL-ESC.
        /// </summary>
        internal static string strKeysCtrlEsc {
            get {
                return ResourceManager.GetString("strKeysCtrlEsc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Address:.
        /// </summary>
        internal static string strLabelAddress {
            get {
                return ResourceManager.GetString("strLabelAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Arguments:.
        /// </summary>
        internal static string strLabelArguments {
            get {
                return ResourceManager.GetString("strLabelArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change Log:.
        /// </summary>
        internal static string strLabelChangeLog {
            get {
                return ResourceManager.GetString("strLabelChangeLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Connect:.
        /// </summary>
        internal static string strLabelConnect {
            get {
                return ResourceManager.GetString("strLabelConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display Name.
        /// </summary>
        internal static string strLabelDisplayName {
            get {
                return ResourceManager.GetString("strLabelDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Domain:.
        /// </summary>
        internal static string strLabelDomain {
            get {
                return ResourceManager.GetString("strLabelDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filename:.
        /// </summary>
        internal static string strLabelFilename {
            get {
                return ResourceManager.GetString("strLabelFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hostname:.
        /// </summary>
        internal static string strLabelHostname {
            get {
                return ResourceManager.GetString("strLabelHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Options:.
        /// </summary>
        internal static string strLabelOptions {
            get {
                return ResourceManager.GetString("strLabelOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password:.
        /// </summary>
        internal static string strLabelPassword {
            get {
                return ResourceManager.GetString("strLabelPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port:.
        /// </summary>
        internal static string strLabelPort {
            get {
                return ResourceManager.GetString("strLabelPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Portable Edition.
        /// </summary>
        internal static string strLabelPortableEdition {
            get {
                return ResourceManager.GetString("strLabelPortableEdition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol:.
        /// </summary>
        internal static string strLabelProtocol {
            get {
                return ResourceManager.GetString("strLabelProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To configure PuTTY sessions click this button:.
        /// </summary>
        internal static string strLabelPuttySessionsConfig {
            get {
                return ResourceManager.GetString("strLabelPuttySessionsConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maximum PuTTY and integrated external tools wait time:.
        /// </summary>
        internal static string strLabelPuttyTimeout {
            get {
                return ResourceManager.GetString("strLabelPuttyTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Released under the GNU General Public License (GPL).
        /// </summary>
        internal static string strLabelReleasedUnderGPL {
            get {
                return ResourceManager.GetString("strLabelReleasedUnderGPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на seconds.
        /// </summary>
        internal static string strLabelSeconds {
            get {
                return ResourceManager.GetString("strLabelSeconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a panel from the list below or click New to add a new one. Click OK to continue..
        /// </summary>
        internal static string strLabelSelectPanel {
            get {
                return ResourceManager.GetString("strLabelSelectPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server Status:.
        /// </summary>
        internal static string strLabelServerStatus {
            get {
                return ResourceManager.GetString("strLabelServerStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Database:.
        /// </summary>
        internal static string strLabelSQLDatabaseName {
            get {
                return ResourceManager.GetString("strLabelSQLDatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Database:.
        /// </summary>
        internal static string strLabelSQLServerDatabaseName {
            get {
                return ResourceManager.GetString("strLabelSQLServerDatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username:.
        /// </summary>
        internal static string strLabelUsername {
            get {
                return ResourceManager.GetString("strLabelUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Verify:.
        /// </summary>
        internal static string strLabelVerify {
            get {
                return ResourceManager.GetString("strLabelVerify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Language.
        /// </summary>
        internal static string strLanguage {
            get {
                return ResourceManager.GetString("strLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (Automatically Detect).
        /// </summary>
        internal static string strLanguageDefault {
            get {
                return ResourceManager.GetString("strLanguageDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} must be restarted before changes to the language will take effect..
        /// </summary>
        internal static string strLanguageRestartRequired {
            get {
                return ResourceManager.GetString("strLanguageRestartRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load From SQL failed!.
        /// </summary>
        internal static string strLoadFromSqlFailed {
            get {
                return ResourceManager.GetString("strLoadFromSqlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load From XML failed!.
        /// </summary>
        internal static string strLoadFromXmlFailed {
            get {
                return ResourceManager.GetString("strLoadFromXmlFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local file.
        /// </summary>
        internal static string strLocalFile {
            get {
                return ResourceManager.GetString("strLocalFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local file does not exist!.
        /// </summary>
        internal static string strLocalFileDoesNotExist {
            get {
                return ResourceManager.GetString("strLocalFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Logoff.
        /// </summary>
        internal static string strLogOff {
            get {
                return ResourceManager.GetString("strLogOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Writing to report file failed!.
        /// </summary>
        internal static string strLogWriteToFileFailed {
            get {
                return ResourceManager.GetString("strLogWriteToFileFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t save report to final location..
        /// </summary>
        internal static string strLogWriteToFileFinalLocationFailed {
            get {
                return ResourceManager.GetString("strLogWriteToFileFinalLocationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Uses the Magic library by [Crownwood Software].
        /// </summary>
        internal static string strMagicLibraryAttribution {
            get {
                return ResourceManager.GetString("strMagicLibraryAttribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на http://www.dotnetmagic.com/.
        /// </summary>
        internal static string strMagicLibraryAttributionURL {
            get {
                return ResourceManager.GetString("strMagicLibraryAttributionURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About.
        /// </summary>
        internal static string strMenuAbout {
            get {
                return ResourceManager.GetString("strMenuAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Connection Panel.
        /// </summary>
        internal static string strMenuAddConnectionPanel {
            get {
                return ResourceManager.GetString("strMenuAddConnectionPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Announcements.
        /// </summary>
        internal static string strMenuAnnouncements {
            get {
                return ResourceManager.GetString("strMenuAnnouncements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check for Updates.
        /// </summary>
        internal static string strMenuCheckForUpdates {
            get {
                return ResourceManager.GetString("strMenuCheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Config.
        /// </summary>
        internal static string strMenuConfig {
            get {
                return ResourceManager.GetString("strMenuConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect.
        /// </summary>
        internal static string strMenuConnect {
            get {
                return ResourceManager.GetString("strMenuConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection Panels.
        /// </summary>
        internal static string strMenuConnectionPanels {
            get {
                return ResourceManager.GetString("strMenuConnectionPanels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connections.
        /// </summary>
        internal static string strMenuConnections {
            get {
                return ResourceManager.GetString("strMenuConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connections and Config.
        /// </summary>
        internal static string strMenuConnectionsAndConfig {
            get {
                return ResourceManager.GetString("strMenuConnectionsAndConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy.
        /// </summary>
        internal static string strMenuCopy {
            get {
                return ResourceManager.GetString("strMenuCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ctrl-Alt-Del.
        /// </summary>
        internal static string strMenuCtrlAltDel {
            get {
                return ResourceManager.GetString("strMenuCtrlAltDel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ctrl-Esc.
        /// </summary>
        internal static string strMenuCtrlEsc {
            get {
                return ResourceManager.GetString("strMenuCtrlEsc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete....
        /// </summary>
        internal static string strMenuDelete {
            get {
                return ResourceManager.GetString("strMenuDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete Connection....
        /// </summary>
        internal static string strMenuDeleteConnection {
            get {
                return ResourceManager.GetString("strMenuDeleteConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete External Tool....
        /// </summary>
        internal static string strMenuDeleteExternalTool {
            get {
                return ResourceManager.GetString("strMenuDeleteExternalTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete Folder....
        /// </summary>
        internal static string strMenuDeleteFolder {
            get {
                return ResourceManager.GetString("strMenuDeleteFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect.
        /// </summary>
        internal static string strMenuDisconnect {
            get {
                return ResourceManager.GetString("strMenuDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Donate.
        /// </summary>
        internal static string strMenuDonate {
            get {
                return ResourceManager.GetString("strMenuDonate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate.
        /// </summary>
        internal static string strMenuDuplicate {
            get {
                return ResourceManager.GetString("strMenuDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate Connection.
        /// </summary>
        internal static string strMenuDuplicateConnection {
            get {
                return ResourceManager.GetString("strMenuDuplicateConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate Folder.
        /// </summary>
        internal static string strMenuDuplicateFolder {
            get {
                return ResourceManager.GetString("strMenuDuplicateFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Duplicate Tab.
        /// </summary>
        internal static string strMenuDuplicateTab {
            get {
                return ResourceManager.GetString("strMenuDuplicateTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exit.
        /// </summary>
        internal static string strMenuExit {
            get {
                return ResourceManager.GetString("strMenuExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на External Tools.
        /// </summary>
        internal static string strMenuExternalTools {
            get {
                return ResourceManager.GetString("strMenuExternalTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на External Tools Toolbar.
        /// </summary>
        internal static string strMenuExternalToolsToolbar {
            get {
                return ResourceManager.GetString("strMenuExternalToolsToolbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;File.
        /// </summary>
        internal static string strMenuFile {
            get {
                return ResourceManager.GetString("strMenuFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full Screen.
        /// </summary>
        internal static string strMenuFullScreen {
            get {
                return ResourceManager.GetString("strMenuFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full Screen (RDP).
        /// </summary>
        internal static string strMenuFullScreenRDP {
            get {
                return ResourceManager.GetString("strMenuFullScreenRDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Help.
        /// </summary>
        internal static string strMenuHelp {
            get {
                return ResourceManager.GetString("strMenuHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на mRemoteNC Help.
        /// </summary>
        internal static string strMenuHelpContents {
            get {
                return ResourceManager.GetString("strMenuHelpContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Jump To.
        /// </summary>
        internal static string strMenuJumpTo {
            get {
                return ResourceManager.GetString("strMenuJumpTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Launch External Tool.
        /// </summary>
        internal static string strMenuLaunchExternalTool {
            get {
                return ResourceManager.GetString("strMenuLaunchExternalTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Connection File.
        /// </summary>
        internal static string strMenuNewConnectionFile {
            get {
                return ResourceManager.GetString("strMenuNewConnectionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New External Tool.
        /// </summary>
        internal static string strMenuNewExternalTool {
            get {
                return ResourceManager.GetString("strMenuNewExternalTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Notifications.
        /// </summary>
        internal static string strMenuNotifications {
            get {
                return ResourceManager.GetString("strMenuNotifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Connection File....
        /// </summary>
        internal static string strMenuOpenConnectionFile {
            get {
                return ResourceManager.GetString("strMenuOpenConnectionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Options.
        /// </summary>
        internal static string strMenuOptions {
            get {
                return ResourceManager.GetString("strMenuOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port Scan.
        /// </summary>
        internal static string strMenuPortScan {
            get {
                return ResourceManager.GetString("strMenuPortScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick Connect Toolbar.
        /// </summary>
        internal static string strMenuQuickConnectToolbar {
            get {
                return ResourceManager.GetString("strMenuQuickConnectToolbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reconnect.
        /// </summary>
        internal static string strMenuReconnect {
            get {
                return ResourceManager.GetString("strMenuReconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh Screen (VNC).
        /// </summary>
        internal static string strMenuRefreshScreen {
            get {
                return ResourceManager.GetString("strMenuRefreshScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename.
        /// </summary>
        internal static string strMenuRename {
            get {
                return ResourceManager.GetString("strMenuRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename Connection.
        /// </summary>
        internal static string strMenuRenameConnection {
            get {
                return ResourceManager.GetString("strMenuRenameConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename Folder.
        /// </summary>
        internal static string strMenuRenameFolder {
            get {
                return ResourceManager.GetString("strMenuRenameFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename Tab.
        /// </summary>
        internal static string strMenuRenameTab {
            get {
                return ResourceManager.GetString("strMenuRenameTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Report a Bug.
        /// </summary>
        internal static string strMenuReportBug {
            get {
                return ResourceManager.GetString("strMenuReportBug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset layout.
        /// </summary>
        internal static string strMenuResetLayout {
            get {
                return ResourceManager.GetString("strMenuResetLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save Connection File.
        /// </summary>
        internal static string strMenuSaveConnectionFile {
            get {
                return ResourceManager.GetString("strMenuSaveConnectionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save Connection File As....
        /// </summary>
        internal static string strMenuSaveConnectionFileAs {
            get {
                return ResourceManager.GetString("strMenuSaveConnectionFileAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Screenshot.
        /// </summary>
        internal static string strMenuScreenshot {
            get {
                return ResourceManager.GetString("strMenuScreenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Screenshot Manager.
        /// </summary>
        internal static string strMenuScreenshotManager {
            get {
                return ResourceManager.GetString("strMenuScreenshotManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send Special Keys (VNC).
        /// </summary>
        internal static string strMenuSendSpecialKeys {
            get {
                return ResourceManager.GetString("strMenuSendSpecialKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sessions.
        /// </summary>
        internal static string strMenuSessions {
            get {
                return ResourceManager.GetString("strMenuSessions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sessions and Screenshots.
        /// </summary>
        internal static string strMenuSessionsAndScreenshots {
            get {
                return ResourceManager.GetString("strMenuSessionsAndScreenshots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Text.
        /// </summary>
        internal static string strMenuShowText {
            get {
                return ResourceManager.GetString("strMenuShowText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SmartSize (RDP/VNC).
        /// </summary>
        internal static string strMenuSmartSize {
            get {
                return ResourceManager.GetString("strMenuSmartSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SSH File Transfer.
        /// </summary>
        internal static string strMenuSSHFileTransfer {
            get {
                return ResourceManager.GetString("strMenuSSHFileTransfer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start Chat (VNC).
        /// </summary>
        internal static string strMenuStartChat {
            get {
                return ResourceManager.GetString("strMenuStartChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Support Forum.
        /// </summary>
        internal static string strMenuSupportForum {
            get {
                return ResourceManager.GetString("strMenuSupportForum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;Tools.
        /// </summary>
        internal static string strMenuTools {
            get {
                return ResourceManager.GetString("strMenuTools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Transfer File (SSH).
        /// </summary>
        internal static string strMenuTransferFile {
            get {
                return ResourceManager.GetString("strMenuTransferFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &amp;View.
        /// </summary>
        internal static string strMenuView {
            get {
                return ResourceManager.GetString("strMenuView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View Only (VNC).
        /// </summary>
        internal static string strMenuViewOnly {
            get {
                return ResourceManager.GetString("strMenuViewOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Website.
        /// </summary>
        internal static string strMenuWebsite {
            get {
                return ResourceManager.GetString("strMenuWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Minimize to notification area.
        /// </summary>
        internal static string strMinimizeToSysTray {
            get {
                return ResourceManager.GetString("strMinimizeToSysTray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Move down.
        /// </summary>
        internal static string strMoveDown {
            get {
                return ResourceManager.GetString("strMoveDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Move up.
        /// </summary>
        internal static string strMoveUp {
            get {
                return ResourceManager.GetString("strMoveUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на My current credentials (Windows logon information).
        /// </summary>
        internal static string strMyCurrentWindowsCreds {
            get {
                return ResourceManager.GetString("strMyCurrentWindowsCreds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Never.
        /// </summary>
        internal static string strNever {
            get {
                return ResourceManager.GetString("strNever", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Connection.
        /// </summary>
        internal static string strNewConnection {
            get {
                return ResourceManager.GetString("strNewConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Folder.
        /// </summary>
        internal static string strNewFolder {
            get {
                return ResourceManager.GetString("strNewFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Panel.
        /// </summary>
        internal static string strNewPanel {
            get {
                return ResourceManager.GetString("strNewPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Root.
        /// </summary>
        internal static string strNewRoot {
            get {
                return ResourceManager.GetString("strNewRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Title.
        /// </summary>
        internal static string strNewTitle {
            get {
                return ResourceManager.GetString("strNewTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No.
        /// </summary>
        internal static string strNo {
            get {
                return ResourceManager.GetString("strNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Compression.
        /// </summary>
        internal static string strNoCompression {
            get {
                return ResourceManager.GetString("strNoCompression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Ext. App specified..
        /// </summary>
        internal static string strNoExtAppDefined {
            get {
                return ResourceManager.GetString("strNoExtAppDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на None.
        /// </summary>
        internal static string strNoInformation {
            get {
                return ResourceManager.GetString("strNoInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на None.
        /// </summary>
        internal static string strNone {
            get {
                return ResourceManager.GetString("strNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Normal.
        /// </summary>
        internal static string strNormal {
            get {
                return ResourceManager.GetString("strNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No SmartSize.
        /// </summary>
        internal static string strNoSmartSize {
            get {
                return ResourceManager.GetString("strNoSmartSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No update available.
        /// </summary>
        internal static string strNoUpdateAvailable {
            get {
                return ResourceManager.GetString("strNoUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You are trying to load a connection file that was created using an very early version of mRemote, this could result in an runtime error.
        ///If you run into such an error, please create a new connection file!.
        /// </summary>
        internal static string strOldConffile {
            get {
                return ResourceManager.GetString("strOldConffile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open new tab to the right of the currently selected tab.
        /// </summary>
        internal static string strOpenNewTabRight {
            get {
                return ResourceManager.GetString("strOpenNewTabRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Ports.
        /// </summary>
        internal static string strOpenPorts {
            get {
                return ResourceManager.GetString("strOpenPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Double click on connection opens new connection.
        /// </summary>
        internal static string strOptionDoubleClickToOpenConnection {
            get {
                return ResourceManager.GetString("strOptionDoubleClickToOpenConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Panel Name.
        /// </summary>
        internal static string strPanelName {
            get {
                return ResourceManager.GetString("strPanelName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password protect.
        /// </summary>
        internal static string strPasswordProtect {
            get {
                return ResourceManager.GetString("strPasswordProtect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TeamViewer: problem found.
        /// </summary>
        internal static string strPfTVProblemFound {
            get {
                return ResourceManager.GetString("strPfTVProblemFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please fill all fields.
        /// </summary>
        internal static string strPleaseFillAllFields {
            get {
                return ResourceManager.GetString("strPleaseFillAllFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t load PortScan panel!.
        /// </summary>
        internal static string strPortScanCouldNotLoadPanel {
            get {
                return ResourceManager.GetString("strPortScanCouldNotLoadPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (These properties will only be saved if you select mRemote/mRemoteNC XML as output file format!).
        /// </summary>
        internal static string strPropertiesWillOnlyBeSavedMRemoteXML {
            get {
                return ResourceManager.GetString("strPropertiesWillOnlyBeSavedMRemoteXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the hostname or ip you want to connect to..
        /// </summary>
        internal static string strPropertyDescriptionAddress {
            get {
                return ResourceManager.GetString("strPropertyDescriptionAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Toggle all inheritance options..
        /// </summary>
        internal static string strPropertyDescriptionAll {
            get {
                return ResourceManager.GetString("strPropertyDescriptionAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select which authentication level this connection should use..
        /// </summary>
        internal static string strPropertyDescriptionAuthenticationLevel {
            get {
                return ResourceManager.GetString("strPropertyDescriptionAuthenticationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select how you want to authenticate against the VNC server..
        /// </summary>
        internal static string strPropertyDescriptionAuthenticationMode {
            get {
                return ResourceManager.GetString("strPropertyDescriptionAuthenticationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select whether to use bitmap caching or not..
        /// </summary>
        internal static string strPropertyDescriptionCacheBitmaps {
            get {
                return ResourceManager.GetString("strPropertyDescriptionCacheBitmaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the colour quality to be used..
        /// </summary>
        internal static string strPropertyDescriptionColors {
            get {
                return ResourceManager.GetString("strPropertyDescriptionColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the compression value to be used..
        /// </summary>
        internal static string strPropertyDescriptionCompression {
            get {
                return ResourceManager.GetString("strPropertyDescriptionCompression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect On Startup.
        /// </summary>
        internal static string strPropertyDescriptionConnectOnStartup {
            get {
                return ResourceManager.GetString("strPropertyDescriptionConnectOnStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Put your notes or a description for the host here..
        /// </summary>
        internal static string strPropertyDescriptionDescription {
            get {
                return ResourceManager.GetString("strPropertyDescriptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select yes if the theme of the remote host should be displayed..
        /// </summary>
        internal static string strPropertyDescriptionDisplayThemes {
            get {
                return ResourceManager.GetString("strPropertyDescriptionDisplayThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select yes if the wallpaper of the remote host should be displayed..
        /// </summary>
        internal static string strPropertyDescriptionDisplayWallpaper {
            get {
                return ResourceManager.GetString("strPropertyDescriptionDisplayWallpaper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter your domain..
        /// </summary>
        internal static string strPropertyDescriptionDomain {
            get {
                return ResourceManager.GetString("strPropertyDescriptionDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select whether to use desktop composition or not..
        /// </summary>
        internal static string strPropertyDescriptionEnableDesktopComposition {
            get {
                return ResourceManager.GetString("strPropertyDescriptionEnableDesktopComposition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select whether to use font smoothing or not..
        /// </summary>
        internal static string strPropertyDescriptionEnableFontSmoothing {
            get {
                return ResourceManager.GetString("strPropertyDescriptionEnableFontSmoothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the encoding mode to be used..
        /// </summary>
        internal static string strPropertyDescriptionEncoding {
            get {
                return ResourceManager.GetString("strPropertyDescriptionEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the encryption strength of the remote host..
        /// </summary>
        internal static string strPropertyDescriptionEncryptionStrength {
            get {
                return ResourceManager.GetString("strPropertyDescriptionEncryptionStrength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the external tool to be started..
        /// </summary>
        internal static string strPropertyDescriptionExternalTool {
            get {
                return ResourceManager.GetString("strPropertyDescriptionExternalTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a external tool to be started after the disconnection to the remote host..
        /// </summary>
        internal static string strPropertyDescriptionExternalToolAfter {
            get {
                return ResourceManager.GetString("strPropertyDescriptionExternalToolAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a external tool to be started before the connection to the remote host is established..
        /// </summary>
        internal static string strPropertyDescriptionExternalToolBefore {
            get {
                return ResourceManager.GetString("strPropertyDescriptionExternalToolBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose a icon that will be displayed when connected to the host..
        /// </summary>
        internal static string strPropertyDescriptionIcon {
            get {
                return ResourceManager.GetString("strPropertyDescriptionIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the MAC address of the remote host if you wish to use it in an external tool..
        /// </summary>
        internal static string strPropertyDescriptionMACAddress {
            get {
                return ResourceManager.GetString("strPropertyDescriptionMACAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This is the name that will be displayed in the connections tree..
        /// </summary>
        internal static string strPropertyDescriptionName {
            get {
                return ResourceManager.GetString("strPropertyDescriptionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sets the panel in which the connection will open..
        /// </summary>
        internal static string strPropertyDescriptionPanel {
            get {
                return ResourceManager.GetString("strPropertyDescriptionPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter your password..
        /// </summary>
        internal static string strPropertyDescriptionPassword {
            get {
                return ResourceManager.GetString("strPropertyDescriptionPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the port the selected protocol is listening on..
        /// </summary>
        internal static string strPropertyDescriptionPort {
            get {
                return ResourceManager.GetString("strPropertyDescriptionPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose the protocol mRemoteNC should use to connect to the host..
        /// </summary>
        internal static string strPropertyDescriptionProtocol {
            get {
                return ResourceManager.GetString("strPropertyDescriptionProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select a PuTTY session to be used when connecting..
        /// </summary>
        internal static string strPropertyDescriptionPuttySession {
            get {
                return ResourceManager.GetString("strPropertyDescriptionPuttySession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies the domain name that a user provides to connect to the RD Gateway server..
        /// </summary>
        internal static string strPropertyDescriptionRDGatewayDomain {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRDGatewayDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies the host name of the Remote Desktop Gateway server..
        /// </summary>
        internal static string strPropertyDescriptionRDGatewayHostname {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRDGatewayHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies when to use a Remote Desktop Gateway (RD Gateway) server..
        /// </summary>
        internal static string strPropertyDescriptionRDGatewayUsageMethod {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRDGatewayUsageMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies whether or not to log on to the gateway using the same username and password as the connection..
        /// </summary>
        internal static string strPropertyDescriptionRDGatewayUseConnectionCredentials {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRDGatewayUseConnectionCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specifies the user name that a user provides to connect to the RD Gateway server..
        /// </summary>
        internal static string strPropertyDescriptionRDGatewayUsername {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRDGatewayUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select whether local disk drives should be shown on the remote host..
        /// </summary>
        internal static string strPropertyDescriptionRedirectDrives {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRedirectDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select whether key combinations (e.g. Alt-Tab) should be redirected to the remote host..
        /// </summary>
        internal static string strPropertyDescriptionRedirectKeys {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRedirectKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select whether local ports (ie. com, parallel) should be shown on the remote host..
        /// </summary>
        internal static string strPropertyDescriptionRedirectPorts {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRedirectPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select whether local printers should be shown on the remote host..
        /// </summary>
        internal static string strPropertyDescriptionRedirectPrinters {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRedirectPrinters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select whether local smart cards should be available on the remote host..
        /// </summary>
        internal static string strPropertyDescriptionRedirectSmartCards {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRedirectSmartCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select how remote sound should be redirected..
        /// </summary>
        internal static string strPropertyDescriptionRedirectSounds {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRedirectSounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select one of the available rendering engines that will be used to display HTML..
        /// </summary>
        internal static string strPropertyDescriptionRenderingEngine {
            get {
                return ResourceManager.GetString("strPropertyDescriptionRenderingEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Choose the resolution or mode this connection will open in..
        /// </summary>
        internal static string strPropertyDescriptionResolution {
            get {
                return ResourceManager.GetString("strPropertyDescriptionResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the SmartSize mode to be used..
        /// </summary>
        internal static string strPropertyDescriptionSmartSizeMode {
            get {
                return ResourceManager.GetString("strPropertyDescriptionSmartSizeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect to the console session of the remote host..
        /// </summary>
        internal static string strPropertyDescriptionUseConsoleSession {
            get {
                return ResourceManager.GetString("strPropertyDescriptionUseConsoleSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use the Credential Security Support Provider (CredSSP) for authentication if it is available..
        /// </summary>
        internal static string strPropertyDescriptionUseCredSsp {
            get {
                return ResourceManager.GetString("strPropertyDescriptionUseCredSsp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Feel free to enter any information you need here..
        /// </summary>
        internal static string strPropertyDescriptionUser1 {
            get {
                return ResourceManager.GetString("strPropertyDescriptionUser1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter your username..
        /// </summary>
        internal static string strPropertyDescriptionUsername {
            get {
                return ResourceManager.GetString("strPropertyDescriptionUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you want to establish a view only connection to the host select yes..
        /// </summary>
        internal static string strPropertyDescriptionViewOnly {
            get {
                return ResourceManager.GetString("strPropertyDescriptionViewOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the proxy address to be used..
        /// </summary>
        internal static string strPropertyDescriptionVNCProxyAddress {
            get {
                return ResourceManager.GetString("strPropertyDescriptionVNCProxyAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter your password for authenticating against the proxy..
        /// </summary>
        internal static string strPropertyDescriptionVNCProxyPassword {
            get {
                return ResourceManager.GetString("strPropertyDescriptionVNCProxyPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the port the proxy server listens on..
        /// </summary>
        internal static string strPropertyDescriptionVNCProxyPort {
            get {
                return ResourceManager.GetString("strPropertyDescriptionVNCProxyPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If you use a proxy to tunnel VNC connections, select which type it is..
        /// </summary>
        internal static string strPropertyDescriptionVNCProxyType {
            get {
                return ResourceManager.GetString("strPropertyDescriptionVNCProxyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter your username for authenticating against the proxy..
        /// </summary>
        internal static string strPropertyDescriptionVNCProxyUsername {
            get {
                return ResourceManager.GetString("strPropertyDescriptionVNCProxyUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hostname/IP.
        /// </summary>
        internal static string strPropertyNameAddress {
            get {
                return ResourceManager.GetString("strPropertyNameAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All.
        /// </summary>
        internal static string strPropertyNameAll {
            get {
                return ResourceManager.GetString("strPropertyNameAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server Authentication.
        /// </summary>
        internal static string strPropertyNameAuthenticationLevel {
            get {
                return ResourceManager.GetString("strPropertyNameAuthenticationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Authentication Mode.
        /// </summary>
        internal static string strPropertyNameAuthenticationMode {
            get {
                return ResourceManager.GetString("strPropertyNameAuthenticationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cache Bitmaps.
        /// </summary>
        internal static string strPropertyNameCacheBitmaps {
            get {
                return ResourceManager.GetString("strPropertyNameCacheBitmaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Colours.
        /// </summary>
        internal static string strPropertyNameColors {
            get {
                return ResourceManager.GetString("strPropertyNameColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compression.
        /// </summary>
        internal static string strPropertyNameCompression {
            get {
                return ResourceManager.GetString("strPropertyNameCompression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connect On Startup.
        /// </summary>
        internal static string strPropertyNameConnectOnStartup {
            get {
                return ResourceManager.GetString("strPropertyNameConnectOnStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Description.
        /// </summary>
        internal static string strPropertyNameDescription {
            get {
                return ResourceManager.GetString("strPropertyNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display Themes.
        /// </summary>
        internal static string strPropertyNameDisplayThemes {
            get {
                return ResourceManager.GetString("strPropertyNameDisplayThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Display Wallpaper.
        /// </summary>
        internal static string strPropertyNameDisplayWallpaper {
            get {
                return ResourceManager.GetString("strPropertyNameDisplayWallpaper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Domain.
        /// </summary>
        internal static string strPropertyNameDomain {
            get {
                return ResourceManager.GetString("strPropertyNameDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Desktop Composition.
        /// </summary>
        internal static string strPropertyNameEnableDesktopComposition {
            get {
                return ResourceManager.GetString("strPropertyNameEnableDesktopComposition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Font Smoothing.
        /// </summary>
        internal static string strPropertyNameEnableFontSmoothing {
            get {
                return ResourceManager.GetString("strPropertyNameEnableFontSmoothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Encoding.
        /// </summary>
        internal static string strPropertyNameEncoding {
            get {
                return ResourceManager.GetString("strPropertyNameEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Encryption Strength.
        /// </summary>
        internal static string strPropertyNameEncryptionStrength {
            get {
                return ResourceManager.GetString("strPropertyNameEncryptionStrength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на External Tool.
        /// </summary>
        internal static string strPropertyNameExternalTool {
            get {
                return ResourceManager.GetString("strPropertyNameExternalTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на External Tool After.
        /// </summary>
        internal static string strPropertyNameExternalToolAfter {
            get {
                return ResourceManager.GetString("strPropertyNameExternalToolAfter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на External Tool Before.
        /// </summary>
        internal static string strPropertyNameExternalToolBefore {
            get {
                return ResourceManager.GetString("strPropertyNameExternalToolBefore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Icon.
        /// </summary>
        internal static string strPropertyNameIcon {
            get {
                return ResourceManager.GetString("strPropertyNameIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MAC Address.
        /// </summary>
        internal static string strPropertyNameMACAddress {
            get {
                return ResourceManager.GetString("strPropertyNameMACAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        internal static string strPropertyNameName {
            get {
                return ResourceManager.GetString("strPropertyNameName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Panel.
        /// </summary>
        internal static string strPropertyNamePanel {
            get {
                return ResourceManager.GetString("strPropertyNamePanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password.
        /// </summary>
        internal static string strPropertyNamePassword {
            get {
                return ResourceManager.GetString("strPropertyNamePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port.
        /// </summary>
        internal static string strPropertyNamePort {
            get {
                return ResourceManager.GetString("strPropertyNamePort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol.
        /// </summary>
        internal static string strPropertyNameProtocol {
            get {
                return ResourceManager.GetString("strPropertyNameProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PuTTY Session.
        /// </summary>
        internal static string strPropertyNamePuttySession {
            get {
                return ResourceManager.GetString("strPropertyNamePuttySession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gateway Domain.
        /// </summary>
        internal static string strPropertyNameRDGatewayDomain {
            get {
                return ResourceManager.GetString("strPropertyNameRDGatewayDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gateway Hostname.
        /// </summary>
        internal static string strPropertyNameRDGatewayHostname {
            get {
                return ResourceManager.GetString("strPropertyNameRDGatewayHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote Desktop Gateway Password.
        /// </summary>
        internal static string strPropertyNameRDGatewayPassword {
            get {
                return ResourceManager.GetString("strPropertyNameRDGatewayPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use Gateway.
        /// </summary>
        internal static string strPropertyNameRDGatewayUsageMethod {
            get {
                return ResourceManager.GetString("strPropertyNameRDGatewayUsageMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gateway Credentials.
        /// </summary>
        internal static string strPropertyNameRDGatewayUseConnectionCredentials {
            get {
                return ResourceManager.GetString("strPropertyNameRDGatewayUseConnectionCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gateway Username.
        /// </summary>
        internal static string strPropertyNameRDGatewayUsername {
            get {
                return ResourceManager.GetString("strPropertyNameRDGatewayUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disk Drives.
        /// </summary>
        internal static string strPropertyNameRedirectDrives {
            get {
                return ResourceManager.GetString("strPropertyNameRedirectDrives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Key Combinations.
        /// </summary>
        internal static string strPropertyNameRedirectKeys {
            get {
                return ResourceManager.GetString("strPropertyNameRedirectKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ports.
        /// </summary>
        internal static string strPropertyNameRedirectPorts {
            get {
                return ResourceManager.GetString("strPropertyNameRedirectPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Printers.
        /// </summary>
        internal static string strPropertyNameRedirectPrinters {
            get {
                return ResourceManager.GetString("strPropertyNameRedirectPrinters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Smart Cards.
        /// </summary>
        internal static string strPropertyNameRedirectSmartCards {
            get {
                return ResourceManager.GetString("strPropertyNameRedirectSmartCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sounds.
        /// </summary>
        internal static string strPropertyNameRedirectSounds {
            get {
                return ResourceManager.GetString("strPropertyNameRedirectSounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rendering Engine.
        /// </summary>
        internal static string strPropertyNameRenderingEngine {
            get {
                return ResourceManager.GetString("strPropertyNameRenderingEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resolution.
        /// </summary>
        internal static string strPropertyNameResolution {
            get {
                return ResourceManager.GetString("strPropertyNameResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SmartSize Mode.
        /// </summary>
        internal static string strPropertyNameSmartSizeMode {
            get {
                return ResourceManager.GetString("strPropertyNameSmartSizeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use Console Session.
        /// </summary>
        internal static string strPropertyNameUseConsoleSession {
            get {
                return ResourceManager.GetString("strPropertyNameUseConsoleSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use CredSSP.
        /// </summary>
        internal static string strPropertyNameUseCredSsp {
            get {
                return ResourceManager.GetString("strPropertyNameUseCredSsp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User Field.
        /// </summary>
        internal static string strPropertyNameUser1 {
            get {
                return ResourceManager.GetString("strPropertyNameUser1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username.
        /// </summary>
        internal static string strPropertyNameUsername {
            get {
                return ResourceManager.GetString("strPropertyNameUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View Only.
        /// </summary>
        internal static string strPropertyNameViewOnly {
            get {
                return ResourceManager.GetString("strPropertyNameViewOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proxy Address.
        /// </summary>
        internal static string strPropertyNameVNCProxyAddress {
            get {
                return ResourceManager.GetString("strPropertyNameVNCProxyAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proxy Password.
        /// </summary>
        internal static string strPropertyNameVNCProxyPassword {
            get {
                return ResourceManager.GetString("strPropertyNameVNCProxyPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proxy Port.
        /// </summary>
        internal static string strPropertyNameVNCProxyPort {
            get {
                return ResourceManager.GetString("strPropertyNameVNCProxyPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proxy Type.
        /// </summary>
        internal static string strPropertyNameVNCProxyType {
            get {
                return ResourceManager.GetString("strPropertyNameVNCProxyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proxy Username.
        /// </summary>
        internal static string strPropertyNameVNCProxyUsername {
            get {
                return ResourceManager.GetString("strPropertyNameVNCProxyUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol Event Disconnected.
        ///Message:
        ///{0}.
        /// </summary>
        internal static string strProtocolEventDisconnected {
            get {
                return ResourceManager.GetString("strProtocolEventDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol Event Disconnected failed.
        ///{0}.
        /// </summary>
        internal static string strProtocolEventDisconnectFailed {
            get {
                return ResourceManager.GetString("strProtocolEventDisconnectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Protocol to import.
        /// </summary>
        internal static string strProtocolToImport {
            get {
                return ResourceManager.GetString("strProtocolToImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proxy test failed!.
        /// </summary>
        internal static string strProxyTestFailed {
            get {
                return ResourceManager.GetString("strProxyTestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proxy test succeeded!.
        /// </summary>
        internal static string strProxyTestSucceeded {
            get {
                return ResourceManager.GetString("strProxyTestSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection failed!.
        /// </summary>
        internal static string strPuttyConnectionFailed {
            get {
                return ResourceManager.GetString("strPuttyConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dispose of Putty process failed!.
        /// </summary>
        internal static string strPuttyDisposeFailed {
            get {
                return ResourceManager.GetString("strPuttyDisposeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t set focus!.
        /// </summary>
        internal static string strPuttyFocusFailed {
            get {
                return ResourceManager.GetString("strPuttyFocusFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get Putty Sessions Failed!.
        /// </summary>
        internal static string strPuttyGetSessionsFailed {
            get {
                return ResourceManager.GetString("strPuttyGetSessionsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Putty Handle: {0}.
        /// </summary>
        internal static string strPuttyHandle {
            get {
                return ResourceManager.GetString("strPuttyHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Killing Putty Process failed!.
        /// </summary>
        internal static string strPuttyKillFailed {
            get {
                return ResourceManager.GetString("strPuttyKillFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Panel Handle: {0}.
        /// </summary>
        internal static string strPuttyParentHandle {
            get {
                return ResourceManager.GetString("strPuttyParentHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Putty Resize Failed!.
        /// </summary>
        internal static string strPuttyResizeFailed {
            get {
                return ResourceManager.GetString("strPuttyResizeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PuTTY Settings.
        /// </summary>
        internal static string strPuttySettings {
            get {
                return ResourceManager.GetString("strPuttySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show PuTTY Settings Dialog failed!.
        /// </summary>
        internal static string strPuttyShowSettingsDialogFailed {
            get {
                return ResourceManager.GetString("strPuttyShowSettingsDialogFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Putty Start Failed!.
        /// </summary>
        internal static string strPuttyStartFailed {
            get {
                return ResourceManager.GetString("strPuttyStartFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на --- PuTTY Stuff ---.
        /// </summary>
        internal static string strPuttyStuff {
            get {
                return ResourceManager.GetString("strPuttyStuff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PuTTY Title: {0}.
        /// </summary>
        internal static string strPuttyTitle {
            get {
                return ResourceManager.GetString("strPuttyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick: {0}.
        /// </summary>
        internal static string strQuick {
            get {
                return ResourceManager.GetString("strQuick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick Connect.
        /// </summary>
        internal static string strQuickConnect {
            get {
                return ResourceManager.GetString("strQuickConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick Connect Add Failed!.
        /// </summary>
        internal static string strQuickConnectAddFailed {
            get {
                return ResourceManager.GetString("strQuickConnectAddFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creating quick connect failed.
        /// </summary>
        internal static string strQuickConnectFailed {
            get {
                return ResourceManager.GetString("strQuickConnectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quick Connect History Exists Failed!.
        /// </summary>
        internal static string strQuickConnectHistoryExistsFailed {
            get {
                return ResourceManager.GetString("strQuickConnectHistoryExistsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RAdmin.
        /// </summary>
        internal static string strRAdmin {
            get {
                return ResourceManager.GetString("strRAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RAW.
        /// </summary>
        internal static string strRAW {
            get {
                return ResourceManager.GetString("strRAW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP.
        /// </summary>
        internal static string strRDP {
            get {
                return ResourceManager.GetString("strRDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 16777216 Colours (24-bit).
        /// </summary>
        internal static string strRDP16777216Colors {
            get {
                return ResourceManager.GetString("strRDP16777216Colors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 256 Colours (8-bit).
        /// </summary>
        internal static string strRDP256Colors {
            get {
                return ResourceManager.GetString("strRDP256Colors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 32768 Colours (15-bit).
        /// </summary>
        internal static string strRDP32768Colors {
            get {
                return ResourceManager.GetString("strRDP32768Colors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 16777216 Colours (32-bit).
        /// </summary>
        internal static string strRDP4294967296Colors {
            get {
                return ResourceManager.GetString("strRDP4294967296Colors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 65536 Colours (16-bit).
        /// </summary>
        internal static string strRDP65536Colors {
            get {
                return ResourceManager.GetString("strRDP65536Colors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP Add Resolution failed!.
        /// </summary>
        internal static string strRdpAddResolutionFailed {
            get {
                return ResourceManager.GetString("strRdpAddResolutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP Add Resolutions failed!.
        /// </summary>
        internal static string strRdpAddResolutionsFailed {
            get {
                return ResourceManager.GetString("strRdpAddResolutionsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Session failed.
        /// </summary>
        internal static string strRdpAddSessionFailed {
            get {
                return ResourceManager.GetString("strRdpAddSessionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close RDP Connection failed!.
        /// </summary>
        internal static string strRdpCloseConnectionFailed {
            get {
                return ResourceManager.GetString("strRdpCloseConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Opening connection failed!.
        /// </summary>
        internal static string strRdpConnectionOpenFailed {
            get {
                return ResourceManager.GetString("strRdpConnectionOpenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t create RDP control, please check mRemoteNC requirements..
        /// </summary>
        internal static string strRdpControlCreationFailed {
            get {
                return ResourceManager.GetString("strRdpControlCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disable Cursor blinking.
        /// </summary>
        internal static string strRDPDisableCursorblinking {
            get {
                return ResourceManager.GetString("strRDPDisableCursorblinking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disable Cursor Shadow.
        /// </summary>
        internal static string strRDPDisableCursorShadow {
            get {
                return ResourceManager.GetString("strRDPDisableCursorShadow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disable Full Window drag.
        /// </summary>
        internal static string strRDPDisableFullWindowdrag {
            get {
                return ResourceManager.GetString("strRDPDisableFullWindowdrag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disable Menu Animations.
        /// </summary>
        internal static string strRDPDisableMenuAnimations {
            get {
                return ResourceManager.GetString("strRDPDisableMenuAnimations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disable Themes.
        /// </summary>
        internal static string strRDPDisableThemes {
            get {
                return ResourceManager.GetString("strRDPDisableThemes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disable Wallpaper.
        /// </summary>
        internal static string strRDPDisableWallpaper {
            get {
                return ResourceManager.GetString("strRDPDisableWallpaper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP disconnected!.
        /// </summary>
        internal static string strRdpDisconnected {
            get {
                return ResourceManager.GetString("strRdpDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP Disconnect failed, trying to close!.
        /// </summary>
        internal static string strRdpDisconnectFailed {
            get {
                return ResourceManager.GetString("strRdpDisconnectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Internal error code 1..
        /// </summary>
        internal static string strRdpErrorCode1 {
            get {
                return ResourceManager.GetString("strRdpErrorCode1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Internal error code 2..
        /// </summary>
        internal static string strRdpErrorCode2 {
            get {
                return ResourceManager.GetString("strRdpErrorCode2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Internal error code 3. This is not a valid state..
        /// </summary>
        internal static string strRdpErrorCode3 {
            get {
                return ResourceManager.GetString("strRdpErrorCode3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Internal error code 4..
        /// </summary>
        internal static string strRdpErrorCode4 {
            get {
                return ResourceManager.GetString("strRdpErrorCode4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unrecoverable error has occurred during client connection..
        /// </summary>
        internal static string strRdpErrorConnection {
            get {
                return ResourceManager.GetString("strRdpErrorConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GetError failed (FatalErrors).
        /// </summary>
        internal static string strRdpErrorGetFailure {
            get {
                return ResourceManager.GetString("strRdpErrorGetFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unknown fatal RDP error has occurred.  Error code {0}..
        /// </summary>
        internal static string strRdpErrorGetUnknown {
            get {
                return ResourceManager.GetString("strRdpErrorGetUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An out-of-memory error has occurred..
        /// </summary>
        internal static string strRdpErrorOutOfMemory {
            get {
                return ResourceManager.GetString("strRdpErrorOutOfMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unknown error has occurred..
        /// </summary>
        internal static string strRdpErrorUnknown {
            get {
                return ResourceManager.GetString("strRdpErrorUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A window-creation error has occurred..
        /// </summary>
        internal static string strRdpErrorWindowCreation {
            get {
                return ResourceManager.GetString("strRdpErrorWindowCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Winsock initialization error..
        /// </summary>
        internal static string strRdpErrorWinsock {
            get {
                return ResourceManager.GetString("strRdpErrorWinsock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t import rdp file!.
        /// </summary>
        internal static string strRdpFileCouldNotBeImported {
            get {
                return ResourceManager.GetString("strRdpFileCouldNotBeImported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fit To Panel.
        /// </summary>
        internal static string strRDPFitToPanel {
            get {
                return ResourceManager.GetString("strRDPFitToPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP Focus failed!.
        /// </summary>
        internal static string strRdpFocusFailed {
            get {
                return ResourceManager.GetString("strRdpFocusFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RD Gateway is supported..
        /// </summary>
        internal static string strRdpGatewayIsSupported {
            get {
                return ResourceManager.GetString("strRdpGatewayIsSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RD Gateway is not supported!.
        /// </summary>
        internal static string strRdpGatewayNotSupported {
            get {
                return ResourceManager.GetString("strRdpGatewayNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GetSessions failed!.
        /// </summary>
        internal static string strRdpGetSessionsFailed {
            get {
                return ResourceManager.GetString("strRdpGetSessionsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open RDP Connectin failed!.
        /// </summary>
        internal static string strRdpOpenConnectionFailed {
            get {
                return ResourceManager.GetString("strRdpOpenConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP reconnection count:.
        /// </summary>
        internal static string strRdpReconnectCount {
            get {
                return ResourceManager.GetString("strRdpReconnectCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetAuthenticationLevel failed!.
        /// </summary>
        internal static string strRdpSetAuthenticationLevelFailed {
            get {
                return ResourceManager.GetString("strRdpSetAuthenticationLevelFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetUseConsoleSession failed!.
        /// </summary>
        internal static string strRdpSetConsoleSessionFailed {
            get {
                return ResourceManager.GetString("strRdpSetConsoleSessionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Setting Console switch for RDC {0}..
        /// </summary>
        internal static string strRdpSetConsoleSwitch {
            get {
                return ResourceManager.GetString("strRdpSetConsoleSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetCredentials failed!.
        /// </summary>
        internal static string strRdpSetCredentialsFailed {
            get {
                return ResourceManager.GetString("strRdpSetCredentialsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetEventHandlers failed!.
        /// </summary>
        internal static string strRdpSetEventHandlersFailed {
            get {
                return ResourceManager.GetString("strRdpSetEventHandlersFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetRDGateway failed!.
        /// </summary>
        internal static string strRdpSetGatewayFailed {
            get {
                return ResourceManager.GetString("strRdpSetGatewayFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetPerformanceFlags failed!.
        /// </summary>
        internal static string strRdpSetPerformanceFlagsFailed {
            get {
                return ResourceManager.GetString("strRdpSetPerformanceFlagsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetPort failed!.
        /// </summary>
        internal static string strRdpSetPortFailed {
            get {
                return ResourceManager.GetString("strRdpSetPortFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetProps failed!.
        /// </summary>
        internal static string strRdpSetPropsFailed {
            get {
                return ResourceManager.GetString("strRdpSetPropsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rdp Set Redirection Failed!.
        /// </summary>
        internal static string strRdpSetRedirectionFailed {
            get {
                return ResourceManager.GetString("strRdpSetRedirectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rdp Set Redirect Keys Failed!.
        /// </summary>
        internal static string strRdpSetRedirectKeysFailed {
            get {
                return ResourceManager.GetString("strRdpSetRedirectKeysFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP SetResolution failed!.
        /// </summary>
        internal static string strRdpSetResolutionFailed {
            get {
                return ResourceManager.GetString("strRdpSetResolutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Smart Size.
        /// </summary>
        internal static string strRDPSmartSize {
            get {
                return ResourceManager.GetString("strRDPSmartSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bring to this computer.
        /// </summary>
        internal static string strRDPSoundBringToThisComputer {
            get {
                return ResourceManager.GetString("strRDPSoundBringToThisComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do not play.
        /// </summary>
        internal static string strRDPSoundDoNotPlay {
            get {
                return ResourceManager.GetString("strRDPSoundDoNotPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Leave at remote computer.
        /// </summary>
        internal static string strRDPSoundLeaveAtRemoteComputer {
            get {
                return ResourceManager.GetString("strRDPSoundLeaveAtRemoteComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP ToggleFullscreen failed!.
        /// </summary>
        internal static string strRdpToggleFullscreenFailed {
            get {
                return ResourceManager.GetString("strRdpToggleFullscreenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RDP ToggleSmartSize failed!.
        /// </summary>
        internal static string strRdpToggleSmartSizeFailed {
            get {
                return ResourceManager.GetString("strRdpToggleSmartSizeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reconnect to previously opened sessions on startup.
        /// </summary>
        internal static string strReconnectAtStartup {
            get {
                return ResourceManager.GetString("strReconnectAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh.
        /// </summary>
        internal static string strRefresh {
            get {
                return ResourceManager.GetString("strRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote file.
        /// </summary>
        internal static string strRemoteFile {
            get {
                return ResourceManager.GetString("strRemoteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove All.
        /// </summary>
        internal static string strRemoveAll {
            get {
                return ResourceManager.GetString("strRemoveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename.
        /// </summary>
        internal static string strRename {
            get {
                return ResourceManager.GetString("strRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rlogin.
        /// </summary>
        internal static string strRlogin {
            get {
                return ResourceManager.GetString("strRlogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        internal static string strSave {
            get {
                return ResourceManager.GetString("strSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save All.
        /// </summary>
        internal static string strSaveAll {
            get {
                return ResourceManager.GetString("strSaveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to save the current connections file before loading another?.
        /// </summary>
        internal static string strSaveConnectionsFileBeforeOpeningAnother {
            get {
                return ResourceManager.GetString("strSaveConnectionsFileBeforeOpeningAnother", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save connections on exit.
        /// </summary>
        internal static string strSaveConsOnExit {
            get {
                return ResourceManager.GetString("strSaveConsOnExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Graphics Interchange Format File (.gif)|*.gif|Joint Photographic Experts Group File (.jpeg)|*.jpeg|Joint Photographic Experts Group File (.jpg)|*.jpg|Portable Network Graphics File (.png)|*.png.
        /// </summary>
        internal static string strSaveImageFilter {
            get {
                return ResourceManager.GetString("strSaveImageFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Screen.
        /// </summary>
        internal static string strScreen {
            get {
                return ResourceManager.GetString("strScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Screenshot.
        /// </summary>
        internal static string strScreenshot {
            get {
                return ResourceManager.GetString("strScreenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Screenshots.
        /// </summary>
        internal static string strScreenshots {
            get {
                return ResourceManager.GetString("strScreenshots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send To....
        /// </summary>
        internal static string strSendTo {
            get {
                return ResourceManager.GetString("strSendTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Serial.
        /// </summary>
        internal static string strSerial {
            get {
                return ResourceManager.GetString("strSerial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get Sessions Background failed.
        /// </summary>
        internal static string strSessionGetFailed {
            get {
                return ResourceManager.GetString("strSessionGetFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Kill Session Background failed.
        /// </summary>
        internal static string strSessionKillFailed {
            get {
                return ResourceManager.GetString("strSessionKillFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set hostname like display name when creating or renaming connections.
        /// </summary>
        internal static string strSetHostnameLikeDisplayName {
            get {
                return ResourceManager.GetString("strSetHostnameLikeDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Setting main form text failed.
        /// </summary>
        internal static string strSettingMainFormTextFailed {
            get {
                return ResourceManager.GetString("strSettingMainFormTextFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Couldn&apos;t save settings or dispose SysTray Icon!.
        /// </summary>
        internal static string strSettingsCouldNotBeSavedOrTrayDispose {
            get {
                return ResourceManager.GetString("strSettingsCouldNotBeSavedOrTrayDispose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show description tooltips in connection tree.
        /// </summary>
        internal static string strShowDescriptionTooltips {
            get {
                return ResourceManager.GetString("strShowDescriptionTooltips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show full connections file path in window title.
        /// </summary>
        internal static string strShowFullConsFilePath {
            get {
                return ResourceManager.GetString("strShowFullConsFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show logon information on tab names.
        /// </summary>
        internal static string strShowLogonInfoOnTabs {
            get {
                return ResourceManager.GetString("strShowLogonInfoOnTabs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show protocols on tab names.
        /// </summary>
        internal static string strShowProtocolOnTabs {
            get {
                return ResourceManager.GetString("strShowProtocolOnTabs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Single click on connection opens it.
        /// </summary>
        internal static string strSingleClickOnConnectionOpensIt {
            get {
                return ResourceManager.GetString("strSingleClickOnConnectionOpensIt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Single click on opened connection switches to it.
        /// </summary>
        internal static string strSingleClickOnOpenConnectionSwitchesToIt {
            get {
                return ResourceManager.GetString("strSingleClickOnOpenConnectionSwitchesToIt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Aspect.
        /// </summary>
        internal static string strSmartSizeModeAspect {
            get {
                return ResourceManager.GetString("strSmartSizeModeAspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Free.
        /// </summary>
        internal static string strSmartSizeModeFree {
            get {
                return ResourceManager.GetString("strSmartSizeModeFree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No SmartSize.
        /// </summary>
        internal static string strSmartSizeModeNone {
            get {
                return ResourceManager.GetString("strSmartSizeModeNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Socks 5.
        /// </summary>
        internal static string strSocks5 {
            get {
                return ResourceManager.GetString("strSocks5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sort.
        /// </summary>
        internal static string strSort {
            get {
                return ResourceManager.GetString("strSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ascending (A-Z).
        /// </summary>
        internal static string strSortAsc {
            get {
                return ResourceManager.GetString("strSortAsc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Descending (Z-A).
        /// </summary>
        internal static string strSortDesc {
            get {
                return ResourceManager.GetString("strSortDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Special Keys.
        /// </summary>
        internal static string strSpecialKeys {
            get {
                return ResourceManager.GetString("strSpecialKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please see Help - Getting started - SQL Configuration for more Info!.
        /// </summary>
        internal static string strSQLInfo {
            get {
                return ResourceManager.GetString("strSQLInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SQL Server.
        /// </summary>
        internal static string strSQLServer {
            get {
                return ResourceManager.GetString("strSQLServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SQL Update check finished and there is an update available! Going to refresh connections..
        /// </summary>
        internal static string strSqlUpdateCheckUpdateAvailable {
            get {
                return ResourceManager.GetString("strSqlUpdateCheckUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SSH version 1.
        /// </summary>
        internal static string strSsh1 {
            get {
                return ResourceManager.GetString("strSsh1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SSH version 2.
        /// </summary>
        internal static string strSsh2 {
            get {
                return ResourceManager.GetString("strSsh2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Transfer.
        /// </summary>
        internal static string strSSHTransferFailed {
            get {
                return ResourceManager.GetString("strSSHTransferFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start IP.
        /// </summary>
        internal static string strStartIP {
            get {
                return ResourceManager.GetString("strStartIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start Port.
        /// </summary>
        internal static string strStartPort {
            get {
                return ResourceManager.GetString("strStartPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Startup/Exit.
        /// </summary>
        internal static string strStartupExit {
            get {
                return ResourceManager.GetString("strStartupExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status.
        /// </summary>
        internal static string strStatus {
            get {
                return ResourceManager.GetString("strStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Switch to Notifications panel on:.
        /// </summary>
        internal static string strSwitchToErrorsAndInfos {
            get {
                return ResourceManager.GetString("strSwitchToErrorsAndInfos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Advanced.
        /// </summary>
        internal static string strTabAdvanced {
            get {
                return ResourceManager.GetString("strTabAdvanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Appearance.
        /// </summary>
        internal static string strTabAppearance {
            get {
                return ResourceManager.GetString("strTabAppearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tabs &amp;&amp; Panels.
        /// </summary>
        internal static string strTabsAndPanels {
            get {
                return ResourceManager.GetString("strTabsAndPanels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Updates.
        /// </summary>
        internal static string strTabUpdates {
            get {
                return ResourceManager.GetString("strTabUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TeamViewer.
        /// </summary>
        internal static string strTeamViewer {
            get {
                return ResourceManager.GetString("strTeamViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Telnet.
        /// </summary>
        internal static string strTelnet {
            get {
                return ResourceManager.GetString("strTelnet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The following:.
        /// </summary>
        internal static string strTheFollowing {
            get {
                return ResourceManager.GetString("strTheFollowing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error ({0}).
        /// </summary>
        internal static string strTitleError {
            get {
                return ResourceManager.GetString("strTitleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Information ({0}).
        /// </summary>
        internal static string strTitleInformation {
            get {
                return ResourceManager.GetString("strTitleInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password.
        /// </summary>
        internal static string strTitlePassword {
            get {
                return ResourceManager.GetString("strTitlePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select Panel.
        /// </summary>
        internal static string strTitleSelectPanel {
            get {
                return ResourceManager.GetString("strTitleSelectPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning ({0}).
        /// </summary>
        internal static string strTitleWarning {
            get {
                return ResourceManager.GetString("strTitleWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Transfer.
        /// </summary>
        internal static string strTransfer {
            get {
                return ResourceManager.GetString("strTransfer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Try to integrate.
        /// </summary>
        internal static string strTryIntegrate {
            get {
                return ResourceManager.GetString("strTryIntegrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TeamViewer path:.
        /// </summary>
        internal static string strTVPath {
            get {
                return ResourceManager.GetString("strTVPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type.
        /// </summary>
        internal static string strType {
            get {
                return ResourceManager.GetString("strType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ultra VNC Repeater.
        /// </summary>
        internal static string strUltraVncRepeater {
            get {
                return ResourceManager.GetString("strUltraVncRepeater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UltraVNC SingleClick port:.
        /// </summary>
        internal static string strUltraVNCSCListeningPort {
            get {
                return ResourceManager.GetString("strUltraVNCSCListeningPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Uncheck the properties you want not to be saved!.
        /// </summary>
        internal static string strUncheckProperties {
            get {
                return ResourceManager.GetString("strUncheckProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на mRemoteNC requires an update.
        /// </summary>
        internal static string strUpdateAvailable {
            get {
                return ResourceManager.GetString("strUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на mRemoteNC can periodically connect to the mRemoteNC website to check for updates and product announcements..
        /// </summary>
        internal static string strUpdateCheck {
            get {
                return ResourceManager.GetString("strUpdateCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check for update completion failed!.
        /// </summary>
        internal static string strUpdateCheckCompleteFailed {
            get {
                return ResourceManager.GetString("strUpdateCheckCompleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check For Update failed!.
        /// </summary>
        internal static string strUpdateCheckFailed {
            get {
                return ResourceManager.GetString("strUpdateCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error deleting update file!.
        /// </summary>
        internal static string strUpdateDeleteFailed {
            get {
                return ResourceManager.GetString("strUpdateDeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download complete!
        ///mRemoteNC will now quit and begin with the installation..
        /// </summary>
        internal static string strUpdateDownloadComplete {
            get {
                return ResourceManager.GetString("strUpdateDownloadComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download complete failed!.
        /// </summary>
        internal static string strUpdateDownloadCompleteFailed {
            get {
                return ResourceManager.GetString("strUpdateDownloadCompleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download Update failed!.
        /// </summary>
        internal static string strUpdateDownloadFailed {
            get {
                return ResourceManager.GetString("strUpdateDownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Every {0} days.
        /// </summary>
        internal static string strUpdateFrequencyCustom {
            get {
                return ResourceManager.GetString("strUpdateFrequencyCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Daily.
        /// </summary>
        internal static string strUpdateFrequencyDaily {
            get {
                return ResourceManager.GetString("strUpdateFrequencyDaily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Monthly.
        /// </summary>
        internal static string strUpdateFrequencyMonthly {
            get {
                return ResourceManager.GetString("strUpdateFrequencyMonthly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Weekly.
        /// </summary>
        internal static string strUpdateFrequencyWeekly {
            get {
                return ResourceManager.GetString("strUpdateFrequencyWeekly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error starting update!.
        /// </summary>
        internal static string strUpdateStartFailed {
            get {
                return ResourceManager.GetString("strUpdateStartFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use a different username and password.
        /// </summary>
        internal static string strUseDifferentUsernameAndPassword {
            get {
                return ResourceManager.GetString("strUseDifferentUsernameAndPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use only Notifications panel (no messagebox popups).
        /// </summary>
        internal static string strUseOnlyErrorsAndInfosPanel {
            get {
                return ResourceManager.GetString("strUseOnlyErrorsAndInfosPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User.
        /// </summary>
        internal static string strUser {
            get {
                return ResourceManager.GetString("strUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use the same username and password.
        /// </summary>
        internal static string strUseSameUsernameAndPassword {
            get {
                return ResourceManager.GetString("strUseSameUsernameAndPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use a smart card.
        /// </summary>
        internal static string strUseSmartCard {
            get {
                return ResourceManager.GetString("strUseSmartCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use SQL Server to load &amp;&amp; save connections.
        /// </summary>
        internal static string strUseSQLServer {
            get {
                return ResourceManager.GetString("strUseSQLServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Version.
        /// </summary>
        internal static string strVersion {
            get {
                return ResourceManager.GetString("strVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC.
        /// </summary>
        internal static string strVnc {
            get {
                return ResourceManager.GetString("strVnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC disconnect failed!.
        /// </summary>
        internal static string strVncConnectionDisconnectFailed {
            get {
                return ResourceManager.GetString("strVncConnectionDisconnectFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Opening connection failed!.
        /// </summary>
        internal static string strVncConnectionOpenFailed {
            get {
                return ResourceManager.GetString("strVncConnectionOpenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC Refresh Screen Failed!.
        /// </summary>
        internal static string strVncRefreshFailed {
            get {
                return ResourceManager.GetString("strVncRefreshFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC SendSpecialKeys failed!.
        /// </summary>
        internal static string strVncSendSpecialKeysFailed {
            get {
                return ResourceManager.GetString("strVncSendSpecialKeysFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC Set Event Handlers failed!.
        /// </summary>
        internal static string strVncSetEventHandlersFailed {
            get {
                return ResourceManager.GetString("strVncSetEventHandlersFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC Set Props Failed!.
        /// </summary>
        internal static string strVncSetPropsFailed {
            get {
                return ResourceManager.GetString("strVncSetPropsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC Start Chat Failed!.
        /// </summary>
        internal static string strVncStartChatFailed {
            get {
                return ResourceManager.GetString("strVncStartChatFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC Toggle SmartSize Failed!.
        /// </summary>
        internal static string strVncToggleSmartSizeFailed {
            get {
                return ResourceManager.GetString("strVncToggleSmartSizeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VNC Toggle ViewOnly Failed!.
        /// </summary>
        internal static string strVncToggleViewOnlyFailed {
            get {
                return ResourceManager.GetString("strVncToggleViewOnlyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warn me if authentication fails.
        /// </summary>
        internal static string strWarnIfAuthFails {
            get {
                return ResourceManager.GetString("strWarnIfAuthFails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warnings.
        /// </summary>
        internal static string strWarnings {
            get {
                return ResourceManager.GetString("strWarnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Uses the DockPanel Suite by [Weifen Luo].
        /// </summary>
        internal static string strWeifenLuoAttribution {
            get {
                return ResourceManager.GetString("strWeifenLuoAttribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на http://sourceforge.net/projects/dockpanelsuite/.
        /// </summary>
        internal static string strWeifenLuoAttributionURL {
            get {
                return ResourceManager.GetString("strWeifenLuoAttributionURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Write log file (mRemoteNC.log).
        /// </summary>
        internal static string strWriteLogFile {
            get {
                return ResourceManager.GetString("strWriteLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на XULrunner path:.
        /// </summary>
        internal static string strXULrunnerPath {
            get {
                return ResourceManager.GetString("strXULrunnerPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yes.
        /// </summary>
        internal static string strYes {
            get {
                return ResourceManager.GetString("strYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Test.
        /// </summary>
        internal static string Test {
            get {
                return ResourceManager.GetString("Test", resourceCulture);
            }
        }
    }
}
